<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.1004.1720                               -->
<workbook source-build='10.0.2 (10000.16.1004.1720)' source-platform='mac' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='airpot_graphs' inline='true' name='federated.129zqcs13cdpjp1e9nx0j0h9en36' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airpot_graphs' name='textscan.1oqpvwv10fys3i100ph7a1ysqx99'>
            <connection class='textscan' directory='/Users/PatrickChen/Desktop' filename='airpot_graphs.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1oqpvwv10fys3i100ph7a1ysqx99' name='airpot_graphs.csv' table='[airpot_graphs#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='airport' ordinal='1' />
            <column datatype='integer' name='year' ordinal='2' />
            <column datatype='real' name='percent on-time gate departures' ordinal='3' />
            <column datatype='real' name='percent on-time airport departures' ordinal='4' />
            <column datatype='real' name='percent on-time gate arrivals' ordinal='5' />
            <column datatype='real' name='average_gate_departure_delay' ordinal='6' />
            <column datatype='real' name='average_taxi_out_time' ordinal='7' />
            <column datatype='real' name='average taxi out delay' ordinal='8' />
            <column datatype='real' name='average airport departure delay' ordinal='9' />
            <column datatype='real' name='average airborne delay' ordinal='10' />
            <column datatype='real' name='average taxi in delay' ordinal='11' />
            <column datatype='real' name='average block delay' ordinal='12' />
            <column datatype='real' name='average gate arrival delay' ordinal='13' />
            <column datatype='real' name='Departure Cancellations' ordinal='14' />
            <column datatype='real' name='Arrival Cancellations' ordinal='15' />
            <column datatype='real' name='Departure Diversions' ordinal='16' />
            <column datatype='real' name='Arrival Diversions' ordinal='17' />
            <column datatype='real' name='% delay gate arrivals' ordinal='18' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[airpot_graphs.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airport]</local-name>
            <parent-name>[airpot_graphs.csv]</parent-name>
            <remote-alias>airport</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[airpot_graphs.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent on-time gate departures</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent on-time gate departures]</local-name>
            <parent-name>[airpot_graphs.csv]</parent-name>
            <remote-alias>percent on-time gate departures</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent on-time airport departures</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent on-time airport departures]</local-name>
            <parent-name>[airpot_graphs.csv]</parent-name>
            <remote-alias>percent on-time airport departures</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent on-time gate arrivals</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent on-time gate arrivals]</local-name>
            <parent-name>[airpot_graphs.csv]</parent-name>
            <remote-alias>percent on-time gate arrivals</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average_gate_departure_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average_gate_departure_delay]</local-name>
            <parent-name>[airpot_graphs.csv]</parent-name>
            <remote-alias>average_gate_departure_delay</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average_taxi_out_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average_taxi_out_time]</local-name>
            <parent-name>[airpot_graphs.csv]</parent-name>
            <remote-alias>average_taxi_out_time</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average taxi out delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average taxi out delay]</local-name>
            <parent-name>[airpot_graphs.csv]</parent-name>
            <remote-alias>average taxi out delay</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average airport departure delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average airport departure delay]</local-name>
            <parent-name>[airpot_graphs.csv]</parent-name>
            <remote-alias>average airport departure delay</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average airborne delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average airborne delay]</local-name>
            <parent-name>[airpot_graphs.csv]</parent-name>
            <remote-alias>average airborne delay</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average taxi in delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average taxi in delay]</local-name>
            <parent-name>[airpot_graphs.csv]</parent-name>
            <remote-alias>average taxi in delay</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average block delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average block delay]</local-name>
            <parent-name>[airpot_graphs.csv]</parent-name>
            <remote-alias>average block delay</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average gate arrival delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average gate arrival delay]</local-name>
            <parent-name>[airpot_graphs.csv]</parent-name>
            <remote-alias>average gate arrival delay</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Departure Cancellations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Departure Cancellations]</local-name>
            <parent-name>[airpot_graphs.csv]</parent-name>
            <remote-alias>Departure Cancellations</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arrival Cancellations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Arrival Cancellations]</local-name>
            <parent-name>[airpot_graphs.csv]</parent-name>
            <remote-alias>Arrival Cancellations</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Departure Diversions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Departure Diversions]</local-name>
            <parent-name>[airpot_graphs.csv]</parent-name>
            <remote-alias>Departure Diversions</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arrival Diversions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Arrival Diversions]</local-name>
            <parent-name>[airpot_graphs.csv]</parent-name>
            <remote-alias>Arrival Diversions</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% delay gate arrivals</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% delay gate arrivals]</local-name>
            <parent-name>[airpot_graphs.csv]</parent-name>
            <remote-alias>% delay gate arrivals</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airpot_graphs.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% Delay Gate Arrivals' datatype='real' name='[% delay gate arrivals]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Airport' datatype='string' name='[airport]' role='dimension' type='nominal' />
      <column caption='Average Airborne Delay' datatype='real' name='[average airborne delay]' role='measure' type='quantitative' />
      <column caption='Average Airport Departure Delay' datatype='real' name='[average airport departure delay]' role='measure' type='quantitative' />
      <column caption='Average Block Delay' datatype='real' name='[average block delay]' role='measure' type='quantitative' />
      <column caption='Average Gate Arrival Delay' datatype='real' name='[average gate arrival delay]' role='measure' type='quantitative' />
      <column caption='Average Taxi In Delay' datatype='real' name='[average taxi in delay]' role='measure' type='quantitative' />
      <column caption='Average Taxi Out Delay' datatype='real' name='[average taxi out delay]' role='measure' type='quantitative' />
      <column caption='Average Gate Departure Delay' datatype='real' name='[average_gate_departure_delay]' role='measure' type='quantitative' />
      <column caption='Average Taxi Out Time' datatype='real' name='[average_taxi_out_time]' role='measure' type='quantitative' />
      <column caption='Percent On-Time Airport Departures' datatype='real' name='[percent on-time airport departures]' role='measure' type='quantitative' />
      <column caption='Percent On-Time Gate Arrivals' datatype='real' name='[percent on-time gate arrivals]' role='measure' type='quantitative' />
      <column caption='Percent On-Time Gate Departures' datatype='real' name='[percent on-time gate departures]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[airport]' derivation='None' name='[none:airport:nk]' pivot='key' type='nominal' />
      <group name='[Top 4]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[airport]' member='&quot;EWR&quot;' />
          <groupfilter function='member' level='[airport]' member='&quot;HPN&quot;' />
          <groupfilter function='member' level='[airport]' member='&quot;PBI&quot;' />
          <groupfilter function='member' level='[airport]' member='&quot;SWF&quot;' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.150735' group-percentage='0.0772059' measure-ordering='alphabetic' measure-percentage='0.772059' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:airport:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;LAS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SJU&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SLC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BUR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HPN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ISP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MEM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DFW&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LGA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PDX&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;PBI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BNA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HOU&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RFD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TPA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HNL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;OMA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RSW&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BWI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CLT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MIA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PSP&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;BHM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DAL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DTW&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PHX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JAX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MKE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SAN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DAY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MSP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SFO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ATL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IAD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IAH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SEA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BOS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LAX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MHT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;OXR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CVG&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FLL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ABQ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ANC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;STL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ONT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SNA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CLE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EWR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PIT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SMF&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;JFK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BDL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DCA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LGB&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MCI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RDU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SWF&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TUS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BUF&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OAK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DEN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MDW&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MSY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OGG&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;SDF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ORD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PVD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SAT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SJC&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:top 10:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Airport Depature Delay'>
      <table>
        <view>
          <datasources>
            <datasource caption='airpot_graphs' name='federated.129zqcs13cdpjp1e9nx0j0h9en36' />
          </datasources>
          <datasource-dependencies datasource='federated.129zqcs13cdpjp1e9nx0j0h9en36'>
            <column caption='Airport' datatype='string' name='[airport]' role='dimension' type='nominal' />
            <column caption='Average Airport Departure Delay' datatype='real' name='[average airport departure delay]' role='measure' type='quantitative' />
            <column-instance column='[average airport departure delay]' derivation='Avg' name='[avg:average airport departure delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Top 4]' derivation='InOut' name='[io:Top 4:nk]' pivot='key' type='nominal' />
            <column-instance column='[airport]' derivation='None' name='[none:airport:nk]' pivot='key' type='nominal' />
            <column-instance column='[average airport departure delay]' derivation='Sum' name='[sum:average airport departure delay:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.129zqcs13cdpjp1e9nx0j0h9en36].[none:airport:nk]' direction='DESC' using='[federated.129zqcs13cdpjp1e9nx0j0h9en36].[sum:average airport departure delay:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.129zqcs13cdpjp1e9nx0j0h9en36].[io:Top 4:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[none:airport:nk]</rows>
        <cols>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[avg:average airport departure delay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Block Delay'>
      <table>
        <view>
          <datasources>
            <datasource caption='airpot_graphs' name='federated.129zqcs13cdpjp1e9nx0j0h9en36' />
          </datasources>
          <datasource-dependencies datasource='federated.129zqcs13cdpjp1e9nx0j0h9en36'>
            <column caption='Airport' datatype='string' name='[airport]' role='dimension' type='nominal' />
            <column caption='Average Block Delay' datatype='real' name='[average block delay]' role='measure' type='quantitative' />
            <column-instance column='[average block delay]' derivation='Avg' name='[avg:average block delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Top 4]' derivation='InOut' name='[io:Top 4:nk]' pivot='key' type='nominal' />
            <column-instance column='[airport]' derivation='None' name='[none:airport:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.129zqcs13cdpjp1e9nx0j0h9en36].[none:airport:nk]' direction='DESC' using='[federated.129zqcs13cdpjp1e9nx0j0h9en36].[avg:average block delay:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.129zqcs13cdpjp1e9nx0j0h9en36].[io:Top 4:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[none:airport:nk]</rows>
        <cols>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[avg:average block delay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay Gate Arrival'>
      <table>
        <view>
          <datasources>
            <datasource caption='airpot_graphs' name='federated.129zqcs13cdpjp1e9nx0j0h9en36' />
          </datasources>
          <datasource-dependencies datasource='federated.129zqcs13cdpjp1e9nx0j0h9en36'>
            <column caption='% Delay Gate Arrivals' datatype='real' name='[% delay gate arrivals]' role='measure' type='quantitative' />
            <column caption='Airport' datatype='string' name='[airport]' role='dimension' type='nominal' />
            <column-instance column='[% delay gate arrivals]' derivation='Avg' name='[avg:% delay gate arrivals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Top 4]' derivation='InOut' name='[io:Top 4:nk]' pivot='key' type='nominal' />
            <column-instance column='[airport]' derivation='None' name='[none:airport:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.129zqcs13cdpjp1e9nx0j0h9en36].[none:airport:nk]' direction='DESC' using='[federated.129zqcs13cdpjp1e9nx0j0h9en36].[avg:% delay gate arrivals:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.129zqcs13cdpjp1e9nx0j0h9en36].[io:Top 4:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[none:airport:nk]</rows>
        <cols>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[avg:% delay gate arrivals:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Gate Depature Delay'>
      <table>
        <view>
          <datasources>
            <datasource caption='airpot_graphs' name='federated.129zqcs13cdpjp1e9nx0j0h9en36' />
          </datasources>
          <datasource-dependencies datasource='federated.129zqcs13cdpjp1e9nx0j0h9en36'>
            <column caption='Airport' datatype='string' name='[airport]' role='dimension' type='nominal' />
            <column caption='Average Gate Departure Delay' datatype='real' name='[average_gate_departure_delay]' role='measure' type='quantitative' />
            <column-instance column='[average_gate_departure_delay]' derivation='Avg' name='[avg:average_gate_departure_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Top 4]' derivation='InOut' name='[io:Top 4:nk]' pivot='key' type='nominal' />
            <column-instance column='[airport]' derivation='None' name='[none:airport:nk]' pivot='key' type='nominal' />
            <column-instance column='[average_gate_departure_delay]' derivation='Sum' name='[sum:average_gate_departure_delay:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.129zqcs13cdpjp1e9nx0j0h9en36].[none:airport:nk]' direction='DESC' using='[federated.129zqcs13cdpjp1e9nx0j0h9en36].[sum:average_gate_departure_delay:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.129zqcs13cdpjp1e9nx0j0h9en36].[io:Top 4:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[none:airport:nk]</rows>
        <cols>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[avg:average_gate_departure_delay:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Delay Gate Arrival'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.129zqcs13cdpjp1e9nx0j0h9en36].[io:Top 4:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[io:Set 1:nk]</field>
            <field>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[io:Top 4:nk]</field>
            <field>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[io:top 10:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Gate Depature Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.129zqcs13cdpjp1e9nx0j0h9en36].[io:Top 4:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[io:Set 1:nk]</field>
            <field>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[io:Top 4:nk]</field>
            <field>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[io:top 10:nk]</field>
            <field>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[none:airport:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Airport Depature Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.129zqcs13cdpjp1e9nx0j0h9en36].[io:Top 4:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[io:Top 4:nk]</field>
            <field>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[io:top 10:nk]</field>
            <field>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[none:airport:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Block Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.129zqcs13cdpjp1e9nx0j0h9en36].[io:Top 4:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[io:Top 4:nk]</field>
            <field>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[io:top 10:nk]</field>
            <field>[federated.129zqcs13cdpjp1e9nx0j0h9en36].[none:airport:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Airport Depature Delay' width='384'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Block Delay' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nOzdd5xV53Xw+98+dXplBhiGgaEMvaOCkEAIIVRQtXqxHMuWHVvJ6zjJJ2+S
      zydv3vsmufcmubETJ466LMtWQaiAECB6EVXADGVgmALTey+n773vH4cZQKBiyjn7OWd9//DH
      c87RaC3tfWbt59nPs7ZmmqaJEEKIuGOLdgBCCCGiQwqAEELEKSkAQggRp6QACCFEnJICIIQQ
      cUoKgBBCxCkpAEIIEaekAAghRJySAiCEEHFKCoAQQsQpKQBCCBGnpAAIIUSckgIghBBxSgqA
      EELEKSkAQggRp6QACCFEnJICIIQQcUoKgBBCxKm4KwCGYaD6UzADgYDyOUA4D5Xpuk4oFIp2
      GFcsFs6nWMgBIv+diLsCEAsnia7r0Q7hqlA9j1i4mAD1jwPERg4Q+TwcEf23WcTr64oJhIxo
      h3HZ9FAIu90OmhbtUK6IHgphd6h7CpqGgQnYbGpfR4XPJwcofDqpfi4NinQe6v8XuwybDp7G
      61d/6C6EEFfC0gWgqbaK6oZWAEw0pk6bQnNLB5MmjgPToKz0KLn5E8nOSKa/u52egI0EY4Dy
      M/VoNhs5I/IpLMjDpviVshBCXAuWHrueKt5DwJlCZmYmWZkZOO2w7bNN+EImIV8/n6x6l71H
      ywA4Wbyb6uZe6k+V0OYzSU1O5PMNq9ldUhnlLIQQwposPQLQgILxEynMTDj7ismILBfN7b2k
      +GspmH0rLacrYNE8Ks60sOy6kTQePk7+mEKmjRvJiEw3G/c3wJyJ0UxDCCEsydIFAGDNO2+S
      muAEexKPPPIQRYV5VNU2ktR9minT53Nwywb8up9eP2QkuWgEaisrMDvrOHroAFMXroh2CkII
      YUmWLwArHvsuhZluTExsmo1R44o4uK0Ep6eTFUtG0jUqiSPFx0gaXojDFp7rD4V8bN+0gyk3
      3cP108dGNwEhhLAoS98DANA0DZvNht1mR9M00rKH09d8hj5XGmlOG1OKJrJh7adMmFA0tIpt
      3OQZ/OSFn1BZvIOSU7VRjV8IIazK0iOA7JGj+ezd1zEBNBcPP/kkuemJzJk2AbInAZBTOJm8
      3ENMKRoFQHr2cMzkBBJTM/nhc9/lozVbGJs/gsxkV/QSEUIIC9LMWNjK+AfQdZ2n/uEj2Qcg
      hIh7lh4BXCuTRmfjC6i7ddwwDOV3n4L6eQxeO2mK7zNR/ThAbOQAkc8jLkcANptN6S+t1+sl
      ISFB6RwgnEdiYmK0w7hswWAQAKfTGeVIrkwsnE+xkANE/juhfskUQghxWaQACCFEnIrLewCb
      N29Wuo+7zHdag9wDsI5YyAEin0dcFoD29nalC4AQQlwNapZMU+fAvkMYQFnJPt5ftYpVq1ax
      cfsufP3dlJSWAxD09bN50w7UXe8jhBDXjpoFAIMTpWWYQMPpMmYtXMry5ctZeP18TP8AZVVV
      YOpsXLMKe3oO9miHK4QQFqRoAbhQQnIKqampJCedWz51qmQPzcEMFl03JYqRCSGEdSl/D8A0
      TdateocUl43c/CJumTGKqqMHOHnI4Nk//jPsit+gE0KIa0XJAmCaBiE9/ExfTdNYvPwe8lIc
      2J0u8HYybuZ13Dh+GGtXr+P57z+G2ymTQEII8WVKTQEF/T5aW9uoOnkcn90xFHxyahrp6emk
      nJ0C0tAYO3U+88YlsnrDTuJqq7MQQnxLShUA3e9h364dHCmv4+EH7kEDCqfMJsN97grfmZTK
      9KLxaJqNG5fcTX66nQG/rAMSQogvi8teQCtXrpR9AEKIuKfkPYArNXHiRHRd3VGBruvY7erf
      1wiFQjgc6p6ChhG+D6X6DtRYOJ9iIQeI/HciLkcA0g3UGqQbqDXEwvkUCzmAdAMVQggRIVIA
      hBAiTqk7AXsFnv2njxV/JKQJqD3UDYuVPFQXC8chFnKASOcRlwUgENIJhNS9CSyEEFeD5QuA
      t6OevZXt3HbDbAAO7dnFyKLZOPvr+HDzPlISXBh2N3fedTepZh9vvLOGh558iuEZyTRXHqXB
      yGBeUUGUsxBCCOux/D0AI+Cjvat76Oeezg78QZ2gp4/RU+fwyKOPsHB6Aas/3Y4R8uHxdrBp
      y+cYJvg9vfT0D0QxeiGEsC7LFwCAgM9DV1cXXV1deHyBodftDgcul5uRo0ehB8Kv50+ag9Z9
      murm7q/6dUIIIVBgCgigvvIUm4PhK/naM3VMuyn8eukX+/A2VFJbU8Ot9zwMhECzs2zpYlZv
      2cLtM4ZHL2ghhLA4JQrA+OlzeOTOWwHYuvbjoZvkhZOnc+u8KSQmp+B2OvC0VQOQO2Yyubv3
      cbIWEkZlRydoIYSwOCWmgL5scO9yUkoKGRkZuJ1fqmOajVuXLWXv7r2RD04IIRRh+VYQIX8/
      rd1e8obnANDa3EhyRg72YB+9ITu5melDn9UDHlq6+skbnguY1FSeImnYKHIyUs99Rtd56h8+
      UnwfgBBCXDnLF4CrTQqAEEKExWUB2F5SQ0hXN+1gMIjT6UD1nY/BYACn0xXtMC6bYeiYgN2m
      dhfK8HFwovL5FAs5QOS/E3FZAKQbqDVIN1BriIXzKRZyAOkGKoQQIkKUWAZ6tTV19KHyuMfv
      9+NyBxUf7ILP7yfBHYx2GJctpOtgmko/1AbC55Nb4eMAsZEDRP47ofaZe5l+/l8b5SawECLu
      Wb4AmKaBz+fDNLXwHB8mIcPA6XBgmibBQACHy4VN09D1EGg2TENH18OP69M0Gy6X2nO0Qghx
      LVi8AJhsX7eK8sZeHOgkZI1lxeJprNtRwuPfWYEe6OeX//j/8MCP/5qivBSKd6zHPe5GOk7s
      oqp1gESXncSsfB68c1G0ExFCCMuxdgEwPBw51coLP/spDpuG1+PB7TTpamrEb5j01lWSPCKX
      8opTTMybS1l1E3ddn0pjwGT5PfeTn5MW7QyEEMKyrL0KyJZIVmKI9z5cw5n6ZhISk7A5kxiV
      7aSxtY9TFVUsXnYvjZWnMEMD9PudpCW5gXPtIlD4Zq8QQlxL1i4A2Hj6+ReYP2UMO9d/yG9X
      rSVkwMSx+VRVV3OmoYfx48biMDw01Zwmo6AQh00D3cvK3/+GX//613y4cXu0kxBCCEuy9hSQ
      aRAyYNK02RRNmc7v3ngZT9Agf8Ik9ny8GXdCOol2jQkjk9n6xVEmzbotvDTSnsijT3+P0TIF
      JIQQX8naBcDw8eqLb5A3ZgwhbzdGch5JThu2jBx6W08zedHDgEZRURHv//eHrLjv0bP/oIbq
      W8KFEOJas3wrCM9AH11d3Wh2Fzk5w3A67IBJb3c3rqQUElxOTD1IR08/2ZkZaJqGZ2AAV0Ii
      DvvFM1zSDE4IIcKsPQIAkpJTSUpO/dKrGmkZmed+sjsZlpV53j+THKHohBBCXZYfAVxtuq5z
      prkHw1A37UDAj8vljnYYVyy8fV/dPHRdB0zsdstfR32tWDifYiEHiPx3Ii4LgHQDtQbpBmoN
      sXA+xUIOIN1AhRBCRIjaY9fLVFtbi8oDn/ADYdS+6gQIBAK4XOo+ECY8BQR2u9oPhFH9OEBs
      5ACRzyMuC8CePXsIhWQVkBAivikzBaQH/dTU1BI82+XTNAza21qHfjZCAXr6PGc/bdLV3kpl
      ZRW9A94oRSyEENamTAGoKy/h5ZdeobyuHQA96OWNX/9/bN5zFABvex2b934BwKEd63nngzWc
      rqrgk407oxazEEJYmTJTQEeOlnHf/cs5duQ408beBkBu4UTOHN5J73UzsGOiGwaBvnZ2H6vn
      uR9+n2S3A8Mwohy5EEJYkxIjAN3fS3OfyaxZs+lprMITCv9RtzmTWHrzDDZs2zv02d7OdvIK
      Ckl2h2ubzaZEikIIEXFK/HWsrThBj9fDrs/3M9DTwum6tqH3iubcTHflF7T2+QHQNC38rFYh
      hBBfS4kCcKSklEWLFlE4dgyLblnA0ZJjQ+9pNid3L7uFDZt3YALpuSNoqa6grdeDaZoEAoHo
      BS6EEBZm/XsAhpd2j527Z07FZbehjx5ByZsfEjI13O7wetn8yXNJ2boNDRuOhHTuWXYDb736
      MpmZaegJw/jBE/dFOQkhhLCemG0FYeg6IV3H6XRx/u5wXddZuXKl7AMQQsQ9648ALpPNbsel
      +A5NIYS4lmJ2BPBV9Bi4Qezz+UhISIh2GFdM9TwGR5EOh9rXUaofB4iNHCDyeah95l4m1buB
      2mw25XOAcB4q99EZ3GOicg4QG+dTLOQAkf9OKLEKSAghxNUXlyOAo0ePKr1DOBQKKT/tAOrn
      MXgOqb7ZUPXjALGRA0Q+D/X/i12GEydOyCogIUTcU+bSxdvfTUtb9wWv+Qb6OHxgHzt37aa+
      uX2ox3/QN8D+vfsZ8AWjEaoQQihBmQLQ0XSG4uPVQz/7+zt58eVX6QloZKUns2PnLoJ6uADU
      lZewafNGjlTURSlaIYSwPrWmgM67w3/kwOdMX7CMJTdOB2D6zNln3zE5cryC+x+6ny9KjrJg
      xjjUXhcghBDXhjIjgC/r6uujcOxYPO11vPbaa7z57mqCIYOQt5vWATuTJ09G62uixytz/UII
      cSnKFgCnw4nHM0Bidj7f+973INiDbppUl5+goamO3/32HRqaGyktr4l2qEIIYUlqTQGdZ0pR
      Ee9vWs+EP3qaRKcdwwwvyTtytIxnf/A8+dmp9LbV8vHWEhbOGh/laIUQwnqUKQCuxBQqjqzn
      9IndpGaP5clHl3NzaztvvPoKTqed1OGFOLQg9uRcCoZn47RrDBs5htykEwRMcMmNACGEuIDy
      vYAMw8AEbJr2rbaBSzdQIYQIU2YE8FUuZxdmenq60gXAMAzld5+C+nkMXjup3n9G9eMAsZED
      RD4P5UcAfyhd15VvGuX1eklISFA6BwjnkZiYGO0wLlswGN5o6HQ6oxzJlYmF8ykWcoDIfyfU
      L5lCCCEui/JTQJdj8MpNVcFgUPkWxKB+HoPTiKoPolU/DhAbOUDk84jLAvDBBx8ofQ9ACCGu
      BpkCEkKIOKXACMBk92cfs/9kLXbTYHTRbO6/awntp0t4Z8NeMlIT8foN7n3wO+TnpPPBb1+i
      R3cR8vsZP30+SxbOx6b2fSEhhLgmLF8AOuvKKG7w8sILL+DQDN5/8w1Kz0xmWMDPlPkLuf26
      aXTVl/HB+u08/937MexOHnn0GVymn49X/p69aZksnCk7gYUQ4sssPwVUW1vNrLk34XLYsdmd
      LFgwk6rTDQBoNg27zYapgaadS0Wz2XAnJrP8zmVUlR6PVuhCCGFplh8BGKaBKyFh6Gen240e
      9AE2Du3aSumu9WjuDB55/PGL2j673EloptorfoQQ4lqx/AggPS2TmqpywivtTGoqqxk2YhgA
      c25azN2334yBk9TkhAv/QdOk6sQRUnNGRzxmIYRQgeVHAIVTZrNl28ts2GKQpPkoqWjlj24Z
      S391Jza7naKZC8A0eeXV3/HDHzyN39PLts0bCXl6aGof4Knv3hrtFIQQwpKUaAUR8PZTXllJ
      yLAzfsJEUpMTCHj78Oo20lOSAWhprCMhPRdfTwt9ngCuhCRGjhyB037hIEeawQkhRJgSBeBq
      kgIghBBhcVkAmpqalN6+HwgEcLlc0Q7jiqmeh67rAMq3IFD9OEBs5ACRzyMuC4B0A7UG6QZq
      DbFwPsVCDiDdQIUQQkSI5VcBXQttbW3KTwE5nU7lr3b8fj9utzvaYVw2XdcxTROHQ+2vkerH
      AWIjB4h8HmqfuZdpy5YtchNYCBH3lCoAnv5e+ga8JKemk5KUgB4K0NfvQdNsJCUn43SEb8b5
      vB58/gAAdoeT1LNLRYUQQpyjTAGoLy9h9Zb9jMjNpq2tkxUPPUFC/2neWr+P/GFpNLe0s+Tu
      h5g2YRS7N6+jsc8gJdGJO30kd992Y7TDF0IIy1GmABwvLubmO+9nVuEI9FAQU7PT1aszcdZ1
      rLh5Lr2dzbz85ioKf/JjQrrGkmV3kp+TFu2whRDCspRZBTRl5kw2fPAum3bsps8bxD60wzd8
      MzctawRTRqTQ3u8FwsupPB4PPl8gShELIYS1KVMAxkyZxwvPP0uK5ueV//5PzjR1XvQZm6aF
      m8bpPjZ+uoaVK1eyde/ByAcrhBAKUGYKyOfzkZSWyYJFt5Hp0qlpbmV66rn3vX1tnGroZVFq
      IqfsCdz/8L0yBSSEEF9DmQLwxa5NHKlsJCczjcbmNh7/7gK0rgoOf76F5rLDDPT7WP7QQyS5
      HICGedHTAYQQQpxPmVYQpmHg83kJhHQSE5NwOR2Yhk4gGF7Pb3c4sNvtaEAoFMJmt2O7xEYp
      aQYnhBBhyowANJuNxKRkEi94zY7bfXEjLtV3ZgohRCQoMwK4WnRdx+fzRTuMK+Lz+XC73cq3
      gvD5fCQkJHzzBy1qcBSp+gVHLJxPsZADRP47ofaZe5mSkpKUPlFsNltMdD602WzSDdQCYuF8
      ioUcIPLfCWWWgQohhLi64nIEUF5ejmEY0Q7jsoVCIeWnHSB8Ba3y1fPgOWSzqX0dFQvnk+rn
      0qBI56H2Ub9Mhw8fllVAQoi4p0QB8Hv7aGxuByA5NYOc7Aw0TcM0dCpPnaSrz8uEydPITE1E
      08A70Edl5WncyekUFo656MHwQgghFLkH0Hj6JJu27ae6+gyfrV7JqnW7MA2dT997nQMnzmAa
      AV77j/+gtq0fb08br7zyGh29A1SeOMy23SXRDl8IISxJiRGABoybNJMlC6fimTmJ36zegaen
      iTO9Cbzw/Ao0TSM/M4Htew+wdEYuycMLWXTzQjTiaoWrEEL8QZQYAZjAkQM7effdt/nVS29y
      48Kb8Q/0kDtm4tCyrxEFBXS3dTIsfwKpoU7+679f5PMDxQRC6t7sFUKIa0mJAqABRdPmsmzZ
      Hdx+6wIO7T8ENhv+8zZ06YEANocduyuRR576Hs889hD9jeW8v25L9AIXQggLU6IAACSlpJCd
      lc3kqVMY6OsmKWMkXaeP0u3xAyaH9u2jYFwh3v4eOnr6Sc/KZeHNCwn0Xdw2WgghhCL3AByu
      BEr2buLUkR2g2bhp0VISEtO5a+kNvPXaK6QkJ6A70njy8RkEelv48P3VONyJ+Hw+Ft1xb7TD
      F0IIS1K+F1AoFCQQDJF43jZw0zTRBzuCfmmTjnQDFUKIMCVGAF/H4XDicFy4c07TNBxfs5vO
      7XYrvXvTNE3le55A7OShulg4DrGQA0Q+D+VHAH8oXdex2WxKnyxerzcmGl95vV5pBmcBsXA+
      xUIOEPnvhLqXwUIIIa6IFAAhhIhTyt8DuBwvrTlEIKRHO4zLpod07HY7qj/2WA/p2B0XP9FN
      FbHSDTQWzifVz6VBkc4jLgvA9pJqvH5ZBSSEiG/KFQDfQDcHDx3FQCMtcxhTJheh+XvZX3wc
      0zRJTE5j0uRJpCUn0lJfgzt9OBmp6j52UAghrhXlxq4D3a1UVrczKm8ErWeO8d6azfh7Wihv
      aCcvL49QfwtvvbsG3YTy0qO0dPZHO2QhhLAk5QoAGmQMG8H4CRNZete9BHob0YD07BwmjB/P
      tOnTwefBADRt8H+EEEJ8mXJTQAA9HW1UVVVQdeIICemjADi+fyddZ45T39jMnQ89hVP+7gsh
      xNdSrgCYQG9vG42NLeSOmcqtUycTaCln2vW38NDSBXS01LNq9XpmTRkf7VCFEMLSlCsAGjC6
      cCq33HLT0GsBwluoTRNcTieGPySPghFCiG+gXAFwJaSSN/LC1xxJafTU7uT110/hdCey7IGH
      SHbaGDZ8JKlJrugEKoQQFheXvYCe+oePZB+AECLuKTcCuBqmjc3BH1R3J7BhGMrvPgX18xi8
      dlK9AZnqxwFiIweIfB5xOQKQbqDWIN1ArSEWzqdYyAGkG6gQQogIkQIghBBxKi7vAWzcuFHp
      R0LKfKc1yD0A64iFHCDyecRlAejs7FS6AAghxNWgVsk0g+zd/QXG2R99Pc28/OIrdPnOrugx
      /Oz+/ODQJrCO+irKapqjEakQQlieYgVAp6ysavAHSou/wNCDHD5WcfaPfohT5WeGCkB/ZxON
      HV1RCVUIIaxOrQJwHtMIcaysnkee/A4nig/CJVazqj0zK4QQ15ay9wAGupowknLJysglRe+i
      26eT6Ya22jJee+VVwMTT08aM2x6MdqhCCGFJyhaAsiMltLTU8tJLL9Pf08WhY5XcPn80OaMn
      8b3vP4IG1B79nCp1N/wKIcQ1pWQBMPUgxysa+NFP/4TMRDuBvkZefm8Ht80bDWigaeHpH8WX
      5wkhxLWkVgHQHMydNwNT15l5w81kJjnQAHdaHgvnTsIwncybP2No7j9j+BgmkBTNiIUQwrLi
      shfQypUrZR+AECLuqTUCuEomTZqEYRjf/EGLCoVCOBzqHzrV8xg8h1Tfgar6cYDYyAEin0dc
      jgCkG6g1SDdQa4iF8ykWcgDpBiqEECJCpAAIIUScUn/S7DK89957Q8N3IYSIV3E5Aoiz2x5C
      CHFJCo4ATLaufpuKgRSef/J+Th7cxaGT1XR3dZGWkUFiWjZ33noDe0pOcuett0Q7WCGEsCzl
      CkDI309lsxcXfXQMBJk85yYmzrqR999+h7sfephktwt9oIPOLukCKoQQX0e5KaCWmnKyRk9m
      1uQCjp2swma343Q6sdvsOBxOnE6HdAEVQohvQbECYHK05DgFo0eQO7qAEyXFyGy+EEJcHqWm
      gHR/P+V1bYwwD3NGM+lrraXTGyI7Uak0hBDCEpT6y9lUXcHISdfx6IrFABzc/glHS6tYMn/S
      RSOBruZ6du3ahd3hYu5115PgkIkhIYQ4n1IFIHXYKG7PSxv6eeb1i2nrCzd1W7xkCQlOOwCO
      5AyWLl5EIGRgszvQMJHngwkhxIXisheQdAMVQog4LQC1tbVKdwMNBoPKNyAD9fMwDAPTNLHb
      7dEO5YqofhwgNnKAyOcRlwVAuoFag3QDtYZYOJ9iIQeQbqBCCCEiJC5HAL29vdEO44r4/X5c
      LpfyVzt+vx+32x3tMC7b4H0k1R9EovpxgNjIASKfh9pn7mXasGGD3AQWQsQ9ZaaATMPA6/Xg
      8XjwB8Jzr6ZpEAica+scCgbRDQPTNIY+I4QQ4tKUKQD+7mZefvVVPlmzhtdffYWdX5QS9Hay
      +pMdQ585vncT5c09BHo7+HTztihGK4QQ1qdMATBNg+Fji3js8cf5wR89Rcm+fegY+PyBoc+E
      Aj5ChgGmgc/vi2K0QghhfUrdAxi85amHgkOtH7o7Wjh27BgAtU1tTJwcldCEEEI5ShWAymPF
      vNXdRv/AAEuW34MdCPl99Pf3A8i8vxBC/AGUKgDjp8/mkXvuQNNs2GwaAU8rw/LGsGDBAgCc
      A01RjlAIIdShTgHQNDSbduG2exO+3OTNdvalxqqTvP12Pw5XAnff9wApLmVudwghREQosxHM
      NHR8gSCJCQkXvOb1BUlKCr8W8HnRnG4cmklvby+GCWgaaWnp2G3hQiHN4IQQIkyZEYBms5OY
      YL/otaSkc6+5Es710EjPyIxYbEIIoSJlRgBXi7SCsA6fz0fCeSM61cRSKwjVz6dYyAEi/52I
      ywIg3UCtQbqBWkMsnE+xkANIN1AhhBARovbY9TJVV1fLA2EsQPU85IEw1hELOUDk84jLArBv
      3z5ZBSSEiHsKFQCTlsZ6uvp95OXlk5aSSG93J/2ecM8fhyuRnOxMNAzqqk/TMxCgoLCQtGR1
      55iFEOJaUqYA7PlsDWVtfgqGp7N75y4efuZ77Nv0Mf0JI0lx2UjNzmFYdgafffg2TV43Y/PS
      2bBxI088+31GZadFO3whhLAcZQpAZV09dz70LHlZKRi6jmbT0DQbC269nbzU8JyZt7OByg6D
      Hz33HZx2G+OGp7Fz10GeeOC2KEcvhBDWo8wqoBvmzeLdN1/jk/WbaO8ZQNM0TNOkubGBuro6
      2jq66e3sZPSYsTjt4bRyR0/A29sc5ciFEMKalCkAk+bczI9/+D1GD0virdffoKXbi2kanDxW
      QnFxMZXVDdhstgtu7pqGjkIpCiFERCkzBdTZ3k56Vhaz5i+gobaWnl4vNpudW5ffw6izU0DB
      gQ7q1+yi13szqQlOyo4eIitvXJQjF0IIa1KmABzevYGyhgGSXRpGQja3jUynMSEBh+3czj9n
      cjZLbyrijZdfITM9gf6Ai6efWRbFqIUQwrqUagWhh0LoponT6eTrNnwHA358gRDJyUnYvrQ1
      XLqBCiFEmDIjAAC7w8G32XPpdLlxutxf+b7q/UKEEOJqUGoEcDVIMzjrkGZw1hAL51Ms5ADS
      DE4IIUSESAEQQog4pdQ9gKuluLhY6W6goVBI+YeQgPp5DJ5DNpva11GqHweIjRwg8nmo/1/s
      Mpw6dUpWAQkh4p6lC0BLQzV1Te3Y7A5GjipgRE4mYNJUV01ZxRlSMoYxbdpk2uprGVk4Hrfd
      RmdzPZ1+GxPG5GHqIc7UNTBu7JhopyKEEJZj6bHryYO76ArYQA/w4e/f5ER1K50NFaxas40R
      +fkEelooO11Peckuyut7ANiz/TNWffwZumni6W1l2479Uc5CCCGsydIjAA2YMGUqhZkJZCaa
      nKxuIiXHQ+aoMRSNn4Bj0iQAzugtlFScYvrouXT2axQMM+nsD9BXU8nwcUXRTUIIISzK0iMA
      gJrKCo4UH+KzbXsYM3Yko4pmk+5v4Jf//is2bNtNIGRQMKGIxsoq+trqcQzLZ9LIYdQ0tlJx
      poGJhQXRTkEIISzJ8gWgr7uND97/gNmL7mNa4XAcriTue/xZ/vSnP8TV38iqdbuxJ2bjppey
      slMUjJtIwcRJnDl1ksbWfvJHZEY7BSGEsCTLF4Dp82/i5z/7Mbs2ruF0YwddLXU0tnXhSkhi
      8rRJBLweQGPciFS27D3FpLEjyR6eR0t1KWbaMJIcau8MFEKIa8XS9wAyc0eS5LSTkVnAc08/
      xNqtO7j95lls3LSKkGkDu4sVDzwIwKQZs6nzlJOR4sZmczOlcCQJo6Z9bdM4Ic+zAn0AACAA
      SURBVISIZ0r2AjJNE9M00TTtD+79Id1AhRAizNIjgK9yOX/4z5eZmal0ARgsfqqLlTxUFwvH
      IRZygMjnoeQI4EpIN1DrkG6g1hAL51Ms5ADSDVQIIUSESAEQQog4peQ9gCu1bds2dF2PdhiX
      zTAM5TtQQng6zm7/Ns94s6bBxQiqHwvVjwPERg4Q+TzisgC0tLQofRNYCCGuBmUuXQ7s3MSx
      U9VDP/v6O1iz+hM6+wNg+Dl48DiDd7O9vR2sfGclHb2+qMQqhBAqUKYAVJwsYdvWnYSM8J/5
      E4cPUFx6nLYeP5h+jh4tH/psVekhWjubOXyiKlrhCiGE5SlTAFyp2QxPNWjs6MM0QpSW1zN3
      xoRLfNLg2KlaVqy4lzMnj6Luc7+EEOLaUqYAmCbMmDGZI0fL6O9swkweTpr74jW/3u4W+rU0
      RhcUkGr00tIt00BCCHEpyhQAMMkfN5nW6lOUHjvK5FmzLvmpyhPHaG6q4dWXX6O2pZVjJysj
      HKcQQqhBoQIA9oQ0Rmfb2FF8hikT8i/xCZOjJ8/w/I9/wvPP/5AXfvwDqkqPEFdbnYUQ4ltS
      ZhnolGkzcdk05t+wkMRRPaS67IweU0Rqqgs0k+nTJ4IRoHDKHIalJ6FpGkkZOcydPI6QCU61
      d4gLIcRVF5e9gKQbqBBCKDQCuJrGjRun9E5g2fVoDYYRXmMmO4GjLxZygMjnEZcjAOkGag3S
      DdQaYuF8ioUcQLqBCiGEiBApAEIIEafi8h7ARx99NDR8F0KIeBWXBcDv98sqICFE3LNkAQj6
      unj9ld9zxyPfpXBEGgBH923naG03jz/yAGUHd3HoZA1OR3gGa9HyB+k9fYDD1b08/p0VOGwa
      RtDL++++TeGcJVw/fVw00xFCCEuyZAEw9AC9Ax72f1HC2BWL0AhRcrQUb8iGbkJXZxfzFi5l
      Yn4WAE6ni9r2FhprG2juGiA/O4X2hiqaugZwt3ZHORshhLAmy94EHjFqMt11ZYRMk57mGsgY
      Q5rLFX7ThGAgSDAYJBAIgqYBJrPnzqDkyEnA5NiRUubOmRbNFIQQwtIsWwA0u4OivGTKG7oo
      PVrC9LlzGFzha5oh9uzawtq1a1m7dh19gfCGnNETptJcdQKfz0NNm5dxo4ZFLwEhhLA4S04B
      DZp3/TzW7DuE3tnNo0tyGXzki2Zzcvud9zGpIPuCz9tcKYzKcFBScpjM0RNx29XeFCKEENeS
      ZUcAhgnpeUV4zuzDkVNIouu8UA2d8hPHOHToEIcOHabHc25J56w501mzZiOzZsn0jxBCfB1L
      jgAc7nRuuWUOYGPFdx7HlT4KDRs3LlmMQ4PJM+dQVddEMBhE0zRsNo2Js28kMSOJ5OzJPPX0
      kxTkphPyjmZeQlx1uhBCiG8tLnsBSTdQIYSI0wJQWVk51MlRRcFgUPkGZKB+HrHSDVT14wCx
      kQNEPo+4LADSDdQapBuoNcTC+RQLOYB0AxVCCBEhlrwJfK15PJ5oh3BFfD4fuq4rf7Xj8/mU
      noobvI/kcKj9NVL9OEBs5ACRz0PtM/cyrVmzRm4CCyHinqULgGkY6Gerod1uH7ri1XWdwVsX
      g68NzusbhoFpgt1uwzRNDMOIiUfFCSHE1WbpAlB1bD/rdh0hJdFOUEvgoYceIicjmY0fvkWT
      x4bTppFbMB69pYLZdz5OXpqbg1s+4UiHkx88djchby+r1m7liUcfjHYqQghhOZYuAKGAj/m3
      3MVNs8ZQd+oQ7763ih//8Lvopsl9jz7FsMTwlf3hXd2cKqsm7/oiqhqbCXkMBoIG3rZacGdG
      OQshhLAmy68CGlyjOrpoLsMSQ/T0B8Ivnrd6tWjiRKqqKgl5OvBoOYwfmUVTezdVp04zoUie
      BSCEEJdi6RHABTQNh8uBbhgEvAP87rWXcNk1xk+7gTsWzSTUsZma08PIGzOWopwAJyprGGhq
      YfFNI6MduRBCWJIyBWCgu5mWNj9pyW5cSck8/egzDEs6F/6wVCcHD59k7h0PMCLRz9aDnxEy
      UxiWrPYmHSGEuFYsXQBMoHjfDlqrkmlsbOLm5feT6Dw7a/WlJfBFE/N5e9Mx7s1Kxe1MQW+v
      JXXizdjUXiovhBDXjKVbQfg9A7R3daNpNtIzs0hOdAPQ19NFUmoG9vP+ugf9Xrp6veQMy0LT
      oKerHZs7hdSkhAt+pzSDE0KIMEuPANxJyYxKSr7o9dT0i1f2ON2J5Oac66GRnilPAxNCiK9j
      6RHAtaDrOu3t7dEO44r4/X5cLpfyrSD8fj9utzvaYVy2WGkFEQvnUyzkAJH/TsRlAZBuoNYg
      3UCtIRbOp1jIAaQbqBBCiAhRe+x6mfbu3Yuu69EO47Lpuh4T/Y1Uz+PL/ahUpfpxgNjIASKf
      R1wWgJqaGlkFJISIe0pNAXU219Dc1Q+mzpGD+2lo6w6/YQQoPV6BCRw/vI+tW7ey78BBOnv6
      oxqvEEJYmVIFoPn0SWpauwCDPTt38OHH69BNwPSxb/9RAI4dKWbk6LHYQwO8/trr1Lf3RjVm
      IYSwKqUKwPnbfxNT8yjMCFFcXhd+5+w8rMPlZvSYsVx302IeXn4DO3cfjEqkQghhdYoVgPPY
      NG5ddgefb95A6CsWsubmF2L0q73mXwghrhV1CwCQmD6ceWPT2V1cxaVqgKenA82VFvG4hBBC
      BeoWABPQNBYsvZOS7Z8RPPvoSNM0CPh9tDXV8eFH65h7/dzoximEEBal1DLQ9JyRuFOSABvj
      Jo5HA+wJqSy7fRG13eFUcrOz+GjlOySmpLHk/ieZOCY3qjELIYRVxWUrCOkGKoQQio0ArpaR
      I0cqvRPYMAxsNnVn7wapnkes7ARW/ThAbOQAkc8jLkcA0gzOGqQZnDXEwvkUCzmANIMTQggR
      IVIAhBAiTsXlPYD169crfRPYNE3lh7qgfh6xcg9A9eMAsZEDRD6PuCwAPT09ShcAIYS4GtQr
      AGaIjZ+upcsTQAPGTpnHjFGJHGsc4PrpEwEIeno4eOIMC+bPjm6sQghhYerdAzB16pv6uPue
      Fdxzzz3MmlSA7u2ltql56CNGwMeZutooBimEENan3ggA0GwOkpKTGHxuTjCq0QghhJqULAAD
      nfW89uqr2EyYd8tSJqZGOyIhhFCPkgUgOSOPx7/7CHbAbnfgbS6PdkhCCKEcJQsAmg2Xy8X5
      j07ubm+joqICpzuR4alOPL3dVFRUYLM7KBg7FqdN/SViQghxNal3E1hzcN2Ncy8I3JWey5hh
      KZw5c4aaunq0hBSKCvI4c+YMZ6qrCehx1e1CCCG+lbjsBSTdQIUQQtUpoCs0depUjLMPkFFR
      KBTCbrcrv/MxGAwq3UjNMAxM08Rut3/zhy0sFs6nYDCIw+FQOgeI/HciLkcA0g3UGqQbqDXE
      wvkUCzmAdAMVQggRIXE5BWQYhtJXCoZhKJ8DnMtDVYOxq5wDxMb5FAs5QOS/E3FZAOQmsBBC
      yBSQEELELSVGAKt++xIDZgKhYJDJs29kwbzp+Ptbef2N90nLTANgdNFsbpiYzYu/eZ/Hvvcc
      eVkpNJ4qpt7I4PophVHOQAghrEeJAhDUHDz86JMQ6Of9d98hMTWDScM1ModP4NHvLAVA02z4
      O2vRbAE2bdrBM4/eQ9A/QH8oIcrRCyGENakxBaSB3WEnOS2Te+68jVOlxwHw9vfT3t5Oe1sb
      Xn8AgJETZpLgraeyoSOaEQshhOWpUQDO405MBj38x769tZ6DBw9y8OBBaprawh/QbNx++xK2
      b9mMbsTVFgchhPiDKDEFNMQ0OVNWSuqwUQAUTJjKihXLht72tFUDkD1qAqMS9nL8TCMpY4ZF
      I1IhhLA8JQqAv7+HnTu24+/tpLa5h2eevQ0CbTTXVLBtWziF4aPHMzZdQ9MAzcai25fyr//6
      7yweMyu6wQshhEUp0QqivrqSPm8Qd2IKBaNH4bDb0IN+KitPM7hlImPYcHIzkujo9ZCbnQWY
      NNZWk5iZS2Zq8tDvkmZwQggRpkQBuJqkAAghRFhcFoD6+npUTjsQCOByuaIdxhVTPQ9d1wGU
      7waq+nGA2MgBIp9HXBYA6QZqDdIN1Bpi4XyKhRxAuoEKIYSIECVWAV1tnZ2dMgVkAX6/H7fb
      He0wLptMAVmH6ufSoEjnEZcFYOPGjXITWAgR95SYAjINHd/ZVg8AwUCAkG5g6CEGPN7zXvcT
      0g1Mw7jg80IIIS6mRAHwdjSwYefeoZ8Pfr6N6qZuOmtK+T//9K+09fsBOL53MxUtPQT62vl0
      87ZohSuEEEpQogBgGviD567oQ8EAumFiGjrjCnP5dP12TNNED/oJGQaYJv6AP4oBCyGE9alR
      AICu5kaKi4spLi6mtqF16PWRRfPQOsqo6/BEMTohhFCPMgXAMEz0UIhQSMc4bwWPpmmsWLGc
      devWIc0/hRDi21NmFVB23ijmX3cdAL7OpgvfGzWJXHZwqtHG7CnRiE4IIdSjxghAAxtf3uGn
      oWkaNk0DTWPZXXdxtPhI+FMaNFSU8tvf/pa3311JX8C4xC8VQoj4pkQrCNPQCYR03Gc3qwQD
      fmx2JxoGIQNcTgdg4hkYwJWQhF0Dj8eDYZpomkZScnK4UCDN4IQQYpASU0CazY7bdW63pdM1
      uFPOxrmXNZKSU4Y+k5xy7v8LIYS4mBIjgKtJ13UGBgaUbgUh296tQdd1TNPE4VDiOuorqX4c
      IDZygMjnEZcFQLqBWoN0A7WGWDifYiEHkG6gQgghIkTtsetlqqqqUnoKKBgM4nA4lL/aUb0L
      Zax0Aw0Gg8qPYmIhB4j8dyIuC8AXX3whq4CEEHFPiQLQ0VxPbWMbOXmjyR8xbOh1v6eP09W1
      OBNSKBxbgN0WviLu7+mktq6RpPRsCvJHDC0BFUIIcY7l7wGUF+/iNyvX4fENsO6D37GzuAyA
      xjOl/PLXr9HY2s6pY4dYuzXcLbSs+HNe/M17tHZ0Urx3GzsPnoxm+EIIYVkWHwGYbN31Bd9/
      7qdkJruZN30Sr721mgUzJ7Dps6088b3nKBiWCpxdkqd72bLzMM/94EdkJrsxTfOCvkFCCCHO
      sXYBMIO4nGmkJYVviiSkZZPpDtA74MHrzmT0sFQqjx/ixOkGRo6dzOzCNJw5Y8hIdnNk/05q
      mruYMH0+U8ePinIiQghhPRafArKhGyGGLuJNg1AIHHYbZjCIbkLe2InMnzGWY6dqsNls6H4/
      pgnjJs9gYkEm5TUtUc1ACCGsytoFQLOT6AhS1dCOCbTWVNDnyCQ1KYkRiUEOHq8kMTmNnOws
      0MCelIXb00BFXTMpaZlkZaZFOwMhhLAsy+8E7mw+wzvvrSElM4Pu7gHue/hxCvOy6O9q4f33
      3kd3JRP0eZg4dzG33zid9oYqPvjoU5zJaXg9A1y/ZAXXTR0z9PukGZwQQoRZvgAAGIaOx+Mj
      ITERh/3coMU0TYLBIHa7A/slXnc4HNhsFw5ypAAIIUSYtW8Cn2Wz2UlJSb7odU3TLrlr7qte
      H2S325XeCWyebXOtuljJQ3WxcBxiIQeIfB5KjACuJmkGZx3SDM4aYuF8ioUcQJrBCSGEiBAp
      AEIIEaeUuAdwtR06dGiok6OKdF1XvgMlqJ+HaZqYpnnRQgPVqH4cIDZygMjnYfkC4PMOEAhB
      ampy+IHvpklvbw/uxGRcDhs+f4jERDdg0tfXT1JSIr29vUObx5zuBFKTky74nRUVFbIKSAgR
      9yx/6VKyawP//tJv8AXDV+z+gS5e+q9fsGX/SYK+Ttas3QlA3akSVn6yBW93C7/7/dvs2rWL
      Xbt2caLidDTDF0IIy7L8CMAIhcjLclFV38n0whzqKkrJGVNEIKQDJoFgEH9/Jx98up0nv/8j
      7HoXOWPGc/+9d0U7dCGEsDTLjwDAZOqsuRw7UoJpmhw9UcXsqYVD77Y0VPPWb97kpjsfIjcj
      PNXTVl/N7t27+fzzz6mub41W4EIIYWkKFADIyh+Hv62aro4WuvUkRmSGN4WZgDshkYQENx6f
      b2hzlzsxmczMTLKysnA51L8xJIQQ14ISBQDNwaQxOWzeto2xk2dw9sFfaEBG9nAef+a7HN/y
      EaebuwFIy8ph6tSpTJ06lbwR2dGLWwghLMz6BUDTsGsa02bPpqTkFDOnjCP8p5/wEABwuFN4
      6rtP8NG77+AJhjh97CAvvvgiL774Ipt3HYpa6EIIYWWWbwVhGgac3d59fp8M0wy/fP46bMMw
      0DQNwzCG/nlN0y5Ypy3N4IQQIszyq4C08/54n9/nY/D/nv/a4B/6b9pIkZOTIwVACBH3LD8C
      uNr6+/tpamqKdhhXRDofWsPgV0flHED94wCxkQNIN9BrLha6gfr9flwul9I5QDgPt9sd7TAu
      2+Ao0uGw/ED6a8XC+RQLOUDkvxPWvwkshBDimpACIIQQcSrupoBiYd52cLWTyjlAOA+VO2nG
      wrkEsXE+xUIOEPnvRNwVACGEEGHqXn4JIYS4IlIAhBAiTqm9fu0KNVeXs3nXXtJzRrPstsUk
      uM5tIAv5PWzesJ62/iC3LLmdsXnDohJj0DfApg3r6RgIsXjpHRSMyDr3phli944d9Hj8gEbR
      zPlMyM+JSpzfxDBClB09jJE8kukTR1/wnh70s2PzBuo7Brjx5iUUjR0ZpSi/nnegh/37DzL7
      xkVkJF34IPjKE0cor24AIH34GBbOmxaNEL9RX3cbe3bvobWjl8mzr+e6mZMueL+sZD/7S8oY
      UzSDWxbMxW7BKfXerlb27N5DW2c/U+Zcz/wZRefeNEPs2radPl8A0Jg8+3rG5VmvH5ge9HH4
      i32cqqojISWDRbfeSm5m6rn3Az62bdpAY5eHmxYtZULB8GsSR9yOAIKeLlZ+uJ7Fy1aQZeti
      /Y4DF7y/ff1HmNnjWL74ej56fyUDgWg8QtJkx7qPsGeNY/ni+bz39tsEznW5IOTtpri8kTlz
      5jBnzmxyM1OiEOM3M0M+3nvrNfbs3UtpVcNF7+/fto5u+zDuWbaIdR+upNtrvV3anU0VvPLa
      bzl48ACdfYGL3j946BDjJk1nzpw5FI3Ni0KE34bBjg2bGDFuOvfeexdHdqymrts/9G5HfTmf
      7TvJivvvo7X8IIfLaqMY61cx2LFhM3kTZnDviuUUb19Nfc+5HEKeTo5UtQx9J3IykqMY61cL
      +f0YtmTuue9+5hSNYtWHn1zw/p4taxlIHMHdS29m7Qcr6fVdm+9E3BaAtqZaRk2ey+gR2cxf
      uISm2soL3q9t7WXx9TPJzR/HpLxUGtu6Ix+kEaCm1cctN80md9R4po5KoKbNM/R2X1c3qRlp
      JCUlk5ObS1pyYuRj/DbsLu57+BnuWbKAS11QVje0cuvC68gens+cSXnU1LdEPMRvkpZdwPM/
      +jFFo3MvftPU8Qz4yMhIIyMrm5zszMgH+K1o3PnwY8yaMp7kxEQMzXHBFX5tZRnX3byE7MxM
      blt6CxUnyqIX6lfSuOuRx5g5eTxJiYmYmgP7eSt/ejo6SctKJyk5mZzc4aQmJUQx1q/mTknn
      hhuvIz0lCV0PkJBwYZzVjR3ceuM8ho0sYMb4XGqb2q9JHHE7BeT19ON2h6+Yna5EXBfsvtMJ
      hnQc9nB9zE5NjcpD5I1QAJ/hxO0Ix5GenUUwcN6VgNON2/SxccNaGls6ufvBR5l4qT9QUaZp
      NpKTk+i95LsG/kAQlzN8KmanpeG3YJ8mh8v91V8WU2dYbi67t2+mtbmJcTMWcMei+ZcsdtGl
      4XDYaK0/zUcfraHoxuWMTD933vf19pFeGH6oUmJyBi6z8qt+URSFc2ipreKj1Z8wZcFyRqS5
      zr3tSsQVGuCzdWtpau1ixXceY/yo6EzffpMzxw7yydbPae3s5fvP/+S8d3QCwSBOZ3hKelhq
      6jXrXRa3BSAhMYVgcACAUNCP7vef964Np8OObhhgt9Pd7yEzCuvVNYcLt00nqJvYbdDf2c1w
      57n7FJm5o3n8sccAaKw6ysbdB5n4+N0Rj/PKaLhdTkIhHVw2uvsGSB6u2EN8bC7ue+hhAIK+
      Xl588fcsunk+iRYcXzedOcF7a7fxwHeeYmzehfeLklOS8XrC3wO/tw+/6bzUr4i6hqrjvL9u
      Jw8+/DRjRl74xz17xBgef2wMALWnitm59zDjH74jGmF+o7HT5/HTKbNorqvinY9W8/MXnjs7
      JWPD5XIS0g1w2ujqHyDbdm2+ExY8RSMjZ0QeteVHaOns5sjBvWSNHItpGJQeK8VAY2RGIgeO
      nqKztZ7y+k5GDMuIeIyazUVeto39JWV0tjVwrG6AgtwkWuvP0NLZT33lcY6XV9Pf309NTQ2p
      GdacejAMnb7eXgYGvPj8Xnp6+jBMKCstJaib5Odmsu/QUbo7mzl6qpaCUdfmhteVCPp99Pb2
      4g8EGejvY8DjI+jpoayylkBfO5/vO0RvXz+tTfXojgSc1rv8B1Nn88YtLLnzPjKSnPT09BAy
      TFrqTtPa2c/ocUUU795BT18fe3d+TuGkom/+nZFm6mzetJXb7rqP9ETHUA7NdVW0dQ1QW36U
      E5U19Pf3U1tbQ2pG5L+330ZvZxNlldV4/QGcbjd6KAjAyePHCRkmo7LT2H/4ON0dTZRWNTJq
      5LUZxcT1RrAzZcXs2HcEd2o2995zJ8kuG5s/28xtdy0n5Olh7ZpP6PPp3LB4KVMK86MSo6+/
      i08+WcdAQOeGxXcwZewIqo4fRE8pIC/DxrZt2+kZ8JGcnssddywh2W29qzb/QA8b1m/AGzQw
      NQ2NRB589H72bt7IDbfehsPwseHTT+jo9TN7wSJmTx4X7ZAvUnfqKHtKTmLoOprdzojRk1gw
      dQR7ShtZfMM09u3exem6ZjSbk5tvW8aY81drWYUZYvOnn9LS0w+EW63ffvdD9NYexUwby8Qx
      2Rz+fCtHK+vJGVXIHUsX4bRZrJKZQTau/ZS23vDoXbPZWXbPg3RXl6Bljmd4isHWrTvo8/pJ
      yRzOHbcvIcltvYkOb38nmzdtpdcXBANuWLyUCfm5bN2wgYW3L0MLeli/9hO6BoLMvWkxM4vG
      XpM44roACCFEPIvbKSAhhIh3UgCEECJOSQEQQog4JQVACCHilBQAIYSIU1IAhBAiTkkBEEKI
      OCUFQAgh4pQUACFERJmmScDvIxi88gZnpmng8/kIRaFZ4yBdDxEIBAgEAuh6uF+7oYeoqa7j
      2+yyNfQQpyurCF3iw3oo/LuDwSBft2c34O2jvrn1D45dCoAQIqJC3jaefOA+/uLvf4F+hY0I
      mk/u4b577+VXb60jWj0N1r75Kx5/4gmefPIJnv/Jn7K/tAZfTyt//Rf/F9+mLIV8vfz1j/6Y
      /kt8+O1X/5XHn3iCp5/5Ln/3j7+ko893yd9RU7aff3n5d39w7FIAhBARdWz3DobPXETNwZ10
      DARoravkYGkFAH2dTew9fBzTMDi8ZwerVn3Atu3b6ei/1B8+k+3btnHrsiVs2bIF3TQpO1ZM
      ZXUzAA2VZZSeqsU/0M3HK9/jd++spK3Xh6ezlb0HDlNTfow9h0/Q2VLP2tUf897K9zldH/5n
      B7pb+GT1R6xd/xkHvjiOYcKZk0f47W/e5LMd+znvuUx4ejp4+Lm/5b133+Xu+aP54JNPQIPB
      xxT4+jpY9d7b/O7d92npCvdh6u1o5qNV77P60w30+3XQwn+KG2sqOHDw5NDIobung7ue/Tkv
      /erfSOws4//84lUAaiuO8tYbb7Bx+350wwRNQ9PANHSOHdrL+yvfY/X6rfh1k+J926jvCP97
      K06WUF53bqQgBUAIETmmwc5du1i87C5umJnL5wdP4e1p4V//5T/xhAy2rX6bzbuPsPXj1/nb
      X76O1+flxV/+EyVVHRf9Kj3oZfeBI9z18HNkd5+konWAlqrD/NdvV2Fi8LtX/p3SuhZ++X//
      Lw5WteFrK+dv/vEXdNae5J/+9//mz//n33PkZCXHD31BTVs3/a3V/I8//Tv8IS9//sPvs/94
      BdXHDvCL/3iJloZyfv43/4g7NZUPXv8F6/YcvyCWyrISPlv/KZ/tLuXG+fPPSzfEP/3Nn1Bc
      1Up3XSn/46//nt7udv78z/6E0tp22htP09kffsKcp6OOP/uzvyTovLChY4LTSUbOSH76l39G
      yef76W0/zZ/82V/jysjko9f+hXW7S4c+a4R87NixFcNmZ9P7r/Lmqi0cPbCN136/BlP38av/
      959p6/EOfV4KgBAiYgLeHvZ8cQSHOUBqTh47duwgf9JskgMtVNY0sGvvEW5bspCSA4f46Z/+
      Fc88/TTjCi79nOuOhlOUNpj0t5xm1Ohctm/fw7wFt1B/4gBNDXUcqe3nuin5HD9VQX7+cLJG
      juHEF0fw6QZ+w87f/9t/8eMn72XcpEn4O5qoae7A21FPZ2s1NY5R/N1f/QWP3HcHLjvUlBVD
      2jDcNhuj80Zw4IvSC2JpbaqnqqoKfyBEMHRufKD7u9h/zMff/tWf8tOf/xXuhmqOlhyh38zn
      L3/2Y77/gz+mIDsRQ+/jf/78Z9x0/0+4aeb4Sz5MyO5yoQeCnDxUjDNjFC5MCsbkc/jIF0Of
      0ewuphQVcfLYcfwmNLS2ctc9D1K8cyMnjx2hw8xi9qRzz+SWAiCEiJiaY/vwJoyi/NAe+oI2
      Th7aT2/AyZIbp7Lm/Y9p8iQwa9JoHE4HtdVn8Hr66D87/dPb3YnXHxz6Xfu2byevcCS7d+zA
      kZrFns93kJAznsnZ8NHaNWQUziI/Kwmw4bInkp1bwN/9zU9w2jVGjR7PpIIRaJrJq//2z4yc
      fgs/+sEfkeYEpysBf0cHTR09dHZ1Yphgd7jQvTrpWZksWv4AD94+74K8Ft52H3/ysz/nhe/d
      w6ebtp97Q7PjxM+AXycU8OLDRoLbRSjQj+/sc8ZNAJuTiZMnUV52kIB+8c0MQw/y2ZrV5M8o
      ItntIBgySM/M4qZlD3DvrQuHPtdRX8qv3tnIsz/8EcsWXQdA7riZzBiuwxOX6QAAAzlJREFU
      8x///WvmL11OsvPcn33rNcoWQsQok507d3HXo8/ykyeWg6nT/kcPc7i8kYW33sZrf/yX3Pb4
      C6Q47dz3nSf4u3/+BYd3fEJjXRuaDX71Dz+nYNEf88x9N2DqfnbsKea5H/8vbps3Ht3Xwf0r
      nqW5N8BtS2/hb/7lDX72D/+JIyH1/2/vTl6iDuM4jr9/M7+fs6X+HMfGadQRFbTEFkOEoKA6
      dEkrD5WXiIgoNcuDYaRU0CGoqENB+wItHsw2bTOCiAiyAimwwGXEYcxlmtEZx1Fn6WAF/gFJ
      4PM6Pg8838Nz+H7he/iwce1qmlvusyw/iz6/RH35GpC0/BmzE9UFvH31hPYXfnwRGUXNYPuG
      AupqqjHqYCpqJqegGLvSyOPWl+hi4yxZu5UV+TkzD0jQdOMMbY1avGM+Nu3Y9/dc1qmUlhRS
      c6AGizaAo3gVBYUrWZ7VRHXVARLjZHZW7EermKisbeD8oQrO3XhA7e4yNJKEhMS9i6dovSkR
      1anUNxwnd5GC5eptHj5rwxgZZ+maEooyZkoqOiNhzyB3bl7hy+ePLF5XDpKWLWWbqTp+her6
      VbN+ROQBCIIwR2IM/3Cjj7cQb5rJIvYMDaA1qCToNXR1d5Nsc5CcaMLl7CIwFUMTCXGkro4T
      lxtJio6imMwkJRiJRSO43W4sVju63xPtQL+TpNR0mA7S0+siMzsboz6OaCSMs7eb8VAYmz0d
      1aQw5AlgS01BkiDo9/K9qxeL1Y4UDmNLT6WjvZ3E5BS+vntOS8cYl04fJhTw0tPnQtGZcGRm
      oP+dYz3qGWLE5wfAFK+yMMUM0TDugWHsaYuITk/yrbOT6ZhMbl4uBp3C9OQETmcfMU0cmZnp
      DP8YxJaWxtT4GEO+AGl2GxpJ4ufIIN7RABpZJtVqw6CfyT8O+n30OPtR9EYcDgdSNITXH8Jq
      MePq7cYTmMRusyLJcagmPZ/etHDt6RcunDk6K+RHNABBEP47n9+3cevuI4ITkxStL2XXto3I
      c5ROFouFuXTyGB19w8gGlT2VlRTkZMxJ7X+h88Nrzl5vZu/BWgrzHLPuRAMQBEGYp8QSWBAE
      YZ4SDUAQBGGe+gWTtjh3xmAOXwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Delay Gate Arrival' width='384'>
      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
      mfjBGRWUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Gate Depature Delay' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nOzdeXRc53nn+e+9taGw78RCEAsJcBcXcRElWhIlkVpJLZYtybHdSadjeyax
      YyfT090zc06np8/MyZkznWTsOE5sx5Et2xK1UhvFRZS4iTvBDQQJgiBAYif2varuNn8UCYkm
      bAkAgftW8fn8IQFVBdSPuFX13Pe9932u5jiOgxBCiNuO7nYAIYQQ7pACIIQQtykpAEIIcZuS
      AiCEELcpKQBCCHGbkgIghBC3KSkAQghxm5ICIIQQtykpAEIIcZuSAiCEELcpKQBCCHGbkgIg
      hBC3KSkAQghxm5ICIIQQt6m4KAAqd7S2bdvtCGNyHEfJbKrmgmg2VV9rtm1LtnGS7RknBUDV
      DwyASCTidoTfyzAMtyOMSdVctm1jmqbbMcZkWZay7wNVt6dlWcpuT9M0p6UAeKf8GaZBz8AI
      Hxy55HaMMVmmicer4J/ZcbBsG4/H43aSG6maC3BsGwfQdfX2m2zLQtN1NE1zO8pNLMvE41Hv
      PeBcK5iaottT13WY4u2p3laZgL6hMK/vrnY7hhBCxBQlSt+RQwcw7ehw58D+g9iOw5bXfsM7
      W7bw5ttbGYmY7Nm2hTO1jQCcOnaQIUPN4a4QQsQKJQpAZ2c71z7/6bjaAYAeSGTjk0+ycFYa
      J89eZigU4ui+3UQsm+7O9tGCIYQQYmKUmAIKD/Ty3jtb0DWNxtYeAIxImO7uLi7VNzJzcSm9
      3gArlxRxsFKmeoQQ4lZQYgQQSE7nscc3snHjRoryMgHo7+7i3LkaypasYdGcAgAqFq+k6Vwl
      IVOmf4QQYrKUKABooHs8eDye0bMYsvIKWLv2HubOLo4eCNdA8/i4764lHKw8525eIYSIA5qj
      wEqInu5O0jKy0DWNzs4usrIy6enpIjMze4zHQOPly+QXFePVo8WirrmLv/rxTrfiCyFETFLi
      GEDGZz7os7OzAG748P/dxxQVl9xwn65pJCb4pi7gZDjOlJ/LO2EOoGI0VXOButlUzQVqvwdU
      NU3bU4kRwGRZlqXkwiGAUChEQkKC2zFu4jgOkUiEQCDgdpQbqJoLPl1t6/Opt7NhGAa6riv5
      PgiHw/j9fuUWqV1fbavi9oxEIni93ilfdKjGMQAhhBDTTokpoMkKRUwa2rrcjjGmSMTA71dv
      D8NxwDQN5fZ+VM0FYF1r0OVVcC/bNE10XVeyTUXEiG5Ptfb/o9sTx1Fy1GSaJrrHgy6tID5f
      W/cg/9vPPnI7hhBCxBTXC8DJowfoHgjhAIsWzad/2Ka8pJCmhgvY/gxmFeRwqbaWgpn5HDp0
      BEfTKZkzj9KZeW5HF0KImOb6eLG+sYmVK1eyauVKMtPTOLT/AI7jcPSTTzh4/CQ4NoeOHscZ
      6aPf8rD0jkV8svMDOvtH3I4uhBAxzfUCEAkN09LSQktrG44WINFjEDIN7IQM9FAf4cEuAqnR
      U0ADgQBpaRmkJidgWjF/8pIQQrjK9SkgiB70cxwd07IpzMukqvIY6TPn4Oup48TZGmbOKgOg
      9swJjuz6gHsfe5a8jESXUwshRGxzfQQQSExmzpxyysvnkOD3MntOKdt27mbu3DmUzynlw12H
      mV2SD0D5Hcv5zrf+mPNVJxkYDrucXAghYpvrI4C8zDS2bt0Kms6X7n+IzLxi7lpzD4XpCTjJ
      5dx9Vw8ZyQk44RRmFxWQU1DE04/oXLzUyLJFc9yOL4QQMSsuVgJLLyAhhBi/uCgAwyNhGjsH
      3Y4xJiMSwef3ux3jZo6DYRjqZVM1F9HrtDqOo+Q1nlVeCGZEItGFfYq1glB6expGtDvyFG/P
      uCgA0gto/FTtuaNqLpBeQBMlvYDGT3oBCSGEmFLqjX0moLe3l+3bt7sdQwghYorrBWBooB9b
      85GSHASgt7uLYHIaWBEcj58Ev5fwyDCOptPb28v1GavE5BTSUpKB6LSBZVmu/RuEECIWuT4F
      dGzvdl7Z8j6O4+DYEf7tZz/myNkGmmpOcLE12uHzwplKGpo6aLxymXe2bOHipXo6e/pdTi6E
      ELHN9RGAx+8nyRumb8RguOUcM8sXjraNdWwb6/qR+kAiK1etprO9kxWrVhP0qXewSwghYonr
      BQBg8aJyTlXVMtxykWWL5tA2FL394J5dXExLoqO1hXX5C9wNKYQQcUaJApBfOo+z77yFPzGN
      lATvaAG4e916FhXPoOrofnWvdyqEEDHK9QKQkpqO3xtgZk4qSYUL8fltkhJ9BLRktEA0XkJi
      8uhVtdLS0tClGAghxKTFxUKwzs5OPvjgA7djCCFETImLAjA4OMilS5fcjjEm0zTxKrjU/Pqp
      s6plUzUXgH3tmsAqrra1LAtN05RsBWGaZrStgWIrgW3bBlDyb2ZZFrquT/nfLC4KgLSCGD9V
      Wy6omgukFcRESSuI8ZNWEEIIIaaUeuPsCRgcHOTEiRNuxxiTqqMTx3FwHEe54a+quUDtbLZt
      o2macnvZMH3TGeMl2zNOCoBhGDQ2NrodQwghYooSBaCh5iQf7j9BwKuRV7qQh760gl//2z+T
      kpnPwGCIJ556ivaaYxy90IrXDjFr7jLuXrFIlgYIIcQkuF4AHNvikyOn+aNvfJOgT+O1l3/D
      QGgpadl5bNr0FA3njlNd00haJMTdDz5MaXYir7/yWzrmlJGbLheGF0KIiXJ/8suxSEjLJuj3
      gKaTm5PFwGCI3o52Dnyyj72HT1E0M2f04bruZVFZMV390gxOCCEmw/0CoOmMDPRj2g7gMDAw
      QEKCn8SUFOzwAP6MYmbmpn36eMeh5WonKYmy9y+EEJPh+hSQpntZVDqD1954m6xkL8N6GpnJ
      fvzBRO5Z9yiH9u7g3R2fMDsNDuz+kNMeC08wk4KsVLejCyFETFNiIZjjOPT3dhM2HbKyMtE1
      DcOI4PcHcBybkZEwfp+HkVAYj8dLMJhww+lR0gpCCCHGz/URAICmaaRlZN1wm98fuHafTmJi
      9GphKT7/mD/v9XrJyckZ8z632bat5HnGoG42VXNd31dS7Xx2UDubbM/xm65sSowAJkvVxVYg
      rSDGS9VcIK0gJkpaQYyftIIQQggxpZSYApqscDis7EpgVbuBgrojJ1VzSeuAiVH1PXC7dwNN
      TU2NjwIwPDzMkSNH3I4hhBAxo7S0VJ0poOrKQxw9dQ6I7ml9+MEWGlq76e9uo66hHYDISD+/
      +uVvCJmWm1GFECIuKFMAOtqbOXXqFLbjEBm4StWFBtq6BhgZ6KG9qw+AS+fO4PFYVF9scTmt
      EELEPmUKALqXgqwkGjsGOH28kuV3LrvpIefrGtm46Qlqqk65EFAIIeKLOgUAWLJsCacrT9DQ
      MUxZftoN9xnDvZyva2DHjo+5fPE8Q2GZBhJCiMlQqgAkZhYy2HqW5NzCm1o911af5qFNz/Pl
      Lz/DE+tWcK5OzbN+hBAiVihzFtD8JXeS7NO5f/3jBNNz8TshApafJJ9JebKGMRJkdl4BmqZR
      sWQFnT0jbkcWQoiYpkwByM2bCUD+zOJrtwS53u8zmATwafM3f0IyBfnJ0xlPCCHiTly0gri+
      pFtF4XBYybYGjuNgGAZ+/9j9ldyiai6ILs5xHEfJRU2GYeDxeJRc1KTqe+B23566rqszApgM
      TdOU3IgQfZGp2Gvk+qpW1bKpmguibxhVewEByvYCsm0br9er3CplTdOUfa1dL0xTXdDV/NQc
      J8uyGB4edjvGmCKRCIZhuB1jTIZhEIlE3I5xE1Vz2bY9+mGmGtM00XVdyRFAJBJRdkQHKFk0
      TdPE4/FMSdHUNI3k5OgUunqv5Ano7++X6wEIIcQX4PV6eeGFF6Jfu5xlTIN93dieJCKDnVxp
      aQc0yirmMjLQR35+PkN93QxEdPJy0t2OKoQQMUu98SLQdrmWhtYeas8cw5OcQXZ2Fn6vhyNH
      DuLYBm+9uQVNwWG4EELEEiU/RbXr/9U08guLyE2KxjTCI3y49R3mrryPGRlyGqgQQkyGkgXg
      Ose22LrldYI+Lw9seJTQ8CC9PX1UrMh0O5oQQsQ8paaAHNvGcRza2tsIJATQdA+PPfUsz331
      WXLSk0jJzOEbX/8aO957i4ER9c4SEUKIWKJUARjsauf1116n00ikfGYaOQVFBH2fRpxVNItA
      UjqbNtzLhYsN7gUVQog4EBcrgTs7O+U0UCGE+AI+expoXBSAkZERrl696naMMRmGoeRKQ1D3
      Wq2q5rKvTVGquHBoOq4hO1Gqvgdu1+2p6zpFRUVAnBQAVS8iDhAKhUhISHA7xk0cxyESiSjX
      o0XVXBB9nanaCsIwDGVbQYTDYfx+v3LF6XoPMRW3ZyQSmZZWEEodAxBCCDF91BtnT0BfXx97
      9+51O8aYHMdRbs/nOlWzqZoL1M2mai6QbBMx3lzr168nKSlp3M+jXAEIh8IEEqLD/76ebhJT
      0/F5dIxImOGRED5/gGBCAp/929i2zcDAgEuJhRDCXROdyVduCujDXdsBsMJD/PJnP6GyugGA
      2hMH2LnnADve38Lb2/cq2/9fCCFihXIFwLRMABovnWfpfY9wqfo0DmDbFsvuuoennn2eQKiN
      5q5Bd4MKIUSMU64AQHQ4U3X+InNmz8ZjDjIYurGffnFeLgOK9v8XQohYoWQBwI5wpamdykOf
      YJghqmuvfHqfY3OhvonM1BT38gkhRBxQ7iBwQiBA++WL3HHPBtYun4cx3MPWj44zN9/P7m3v
      cEiHkrmLyU1L/PxfJoQQ4veKi4Vg0gpCCHE7e/rpp0cv8zgeyo0AJiIQCDBnzhy3Y4xJ5VXK
      tm0reQ1ZVXNd31dS8bxx27bRNE3ZbLI9x2e8f7OJtk6JixGAyh+y0gpifFTNBdIKYqKkFcT4
      SSsIIYQQUyoupoC6+kd4a1+N2zHGpO7oxMG2bHTlsqmaKzo6cRxHyekMlaeAVH0POI4NDmhK
      bk8LXdPhc7bn3YtmsrhsxoSfJy4KwMBwmK2Hat2OIYQQ0yo/Kzm2C0BosIct77wPuoeMGaWU
      ZXvQMkuYXZDJqy/+gnuf/ga5SbD3k6MUZgU5cf4yCX4vi1fcQ1lhttvxhRAiZrleABrOVTFz
      wUrWLp1LJBxhsLuRg2cvUphURsgyqKmtI1joJ0QCQ4NDrF77ICX56W7HFkKImOf65FfJ/EXU
      n/yEzW9soat/iPTsAvo7W2m6fInFd2+gu+kSdXX1zJ5TBo7N2TMnOXLkCN0D0gpCCCEmw/UC
      4A2k8PU//vc8fP897P5oB3gTSPFGOH2hhbmzS/B7Tc43d1NakAlopGdkkp2dTcDn+uBFCCFi
      muufoi2XL7D70AmSEnykZuahAXMrSthzpo3EgJfSvEwqLw/h0zV8/gSKikqYNSPV7dhCCBHz
      lFgIZtsWtgPeCZ4qVtfcxV/9eOctTiWEEGr708eXsemeuRP+eddHAAC67pnUXFRK0M+GlbNv
      WZ5bybYsJc9pB+facnPVsqma61rrAMdR9LxxddcBqPoecBwbAE1Tc3vqmva56wCKZ6RN6nmU
      GAFMlqoLTUBaQYyXqrlAWkFMlLSCGD9pBSGEEGJKKTEFNFld/cPSCmKcHCc6zPR41NoHUDUX
      gG07gLSCGC/LstB1z+fNZky76PYEXVcsGGBZNmvvKOaO2RNf5ftFxEUBGBiOsPXQRbdjCCHE
      LVM0I/32KwBnKw9xtq4ZxzKYt3QV6U4vB85cwq/bpObO4qF772L/7n3cc/+XZP5KCCEmQbnP
      0KHBEe5Zt4GvfOUZqk8eYWSon+Vr1/HlZ79Kx6UaDBu6u3vcjimEEDFPuREAjs3VtlZ6Wwaw
      9ejZM/s+3MbByACJeeX4lCtZQggRm5T7OHWw6Oi4iqUHeebJxwG454GHef5rX8fubWQoYruc
      UAgh4oN6IwDNx8JFSyjMSYl+i0b16ZN0pfgZDDl4PeodsRdCiFikXAFYvHwlvoTg6PfFC+4k
      cUYPmqaxYvUaEjwa9z9wH1IGhBBicpQrAInJyTd8n5CYTFHijbelpd+4/Nnr0clJT5zybBPh
      OI6S52YD4ICSlVTVXKBuNlVzofh7QFUOBANT//EsrSCmmLSCGB9Vc4G0gpgoaQUxftIKQggh
      xJRSbgpoIgzDoKWlxe0YYzIMQ8k9DIjuAXm96r0EVM1l2zaO4yi5lx1tt6Art5cN6r4HVNue
      aWlppKZO77VO1HuXTcDg4CC7d+92O4YQQkzYkiVLuOOOO6b1OZWZArKNMLt3bWfH9h2cqLqA
      45icq66N3meZ1NTWYpsRamrrXE4qhBDxQZ0CYBn0hS3W3nM3zeeOUtfczfma6Ie9Y5vUXowW
      gIuXpOmbEELcCkpNAXl0HZ/fT1pKEqZl09fTwcmTJ7HNCCHDcjueEELEFaUKQNOli+y0LIKp
      +VQUZXDc4yMlJQXbiqC3XnU7nhBCxBWlCkDRnAoe27Ah+o0dJjE1ndmzZ2MZIWrq6gGIhMP0
      9vYSSAgSTFDvXHEhhIgVyhwD0L1+5ldUfHqD5mXRoujV7jXdy4J589C9frJTghw+fJj6RjVP
      +xRCiFihzAhA9/opKyn59AbNQ3l5afQ+j5ey0jIAvrRuvQvphBAi/sRFK4hIJMLIyIjbMcYU
      iUTw+/1uxxiTigt0HMfBNE3lckF04ZBt20ouUjNNE13XlbxesarvAcuKnliiykKwQCAw2jZm
      ulpBqPdKngCPx0NaWtrnP9AF0gtofFTNBdILaKKkF5C64qIAOI4zWs1VY9u2ktkcx1Eym6q5
      IFoAVH2tqZjpuuuFUzXXW0G48bfTNE2J0VpcFIDe3l4++OADt2MIIcQXsnLlSubNm+d2DJfO
      AnJsmhqvEDGjewWWEaaxqQXHgZamy9Q3NDA4HMJxHLo6O6NV2gjT2hZdCxAJDTEwHHIluhBC
      xAuXCoDBKy/9kspzDQDUVR3jVy/9hrADH+/aSW93J6+//GvO1jWx96OdDIZMmuuq+emLL2PY
      DudPHOZyW48r0YUQIl64NglVOmcxV2qqcByHc3UtLJpdAkByRibLlq/gj772VU4fP0ZpYTaX
      27q5WN/E6jtKaekcoLG1k1kFOW5FF0KIuOBaAdB9CSR7Dbp6ujB9KQR9N0bxJSThx6RkdjmX
      L16gb8Rk2eIK6uouMRCBlIS4OHwhhBCucfEwtMbiBWW899b7zFm4+IZ7HMehoeY0vpQc0nIL
      6G48hy8hjewZs2irPUJi9kxVL38qhBAxw50CoOnk5GZRWDYfX8DP/NICMnNzo2FCQ7z66qtU
      1Xey4cF70HQ/BXnZlM2bh8cfJCs1lflzKz7vGYQQQnyOuFgJ3NnZKaeBCiFixuedBiorgcch
      GAyyYsUKt2OMSdXr20J0gY6KK0dVzeU4Do7jKLGA53fZto2macqttgV13wPXF6e5sT1zc3On
      /TnHEhcjAFU/MEBaQYyXqrlAWkFMlLSCGL/pGgGotysjhBBiWqg3LpuAgYEBjhw54naMMdm2
      reSUAaibTdVc1wfLqu3JgtrZZHtGFRYWsnDhwml5ri/K9QIQbf7l4PHoN3xtWSaRiIHfH8Dj
      0bEtC03X0TTthq8hOpRrb293+V8ihBC/X0pKitsRbuJ6WQ4PdbFnXyUAoe4m9ldWERnu5Ze/
      eJHt27fx4q9/w1DY4MS+3XQPhwE4cmgvXYMRN2MLIUTMU2AEYBM2zOjXtk3ENDh5aD+r129i
      YUkudWcOc/z0BfyRMJYdHbJFImEc9brLCiFETHG9AACcP3WUkYEWjOE+0ksX098zwoKZ0dOk
      cmcUcL6qgSyXMwohRLxxfQoIYN4dK3j66afZuGEduq6RnOanubUbgO6uqyQlpuHxOAwMR6d9
      IiMhNF29g11CCBFLlBgBoF07oKtpaGgsWbWWl377KvUlxVy+3Mrz3/g6Vl8qr779BnXF+TR1
      hlmXrN65u0IIEUtcXwgWXV0Juq5FvwZ0LbroZmBgiJSUFDye6EDFiIQZGgmTmpKC/pkRgLSC
      EEKobs6cOaxZs+YLPfa2aQURXb7+ma+v3e7xeElPv/FC7z5/gHT/zStEfT4fhYWFU5x0YlRd
      paxqWwNVc4Ha2VRuBaFqtunenunp6dPyPOPh+gjgVlD1QxakFcR4qZoLpBXEREkriPGTVhBC
      CCGmlOtTQLdCKBSivr7e7RhjUrUTouM4WJalXDZVc0F0KsNxHCX3si3LQtM0JaenTNPE4/Eo
      NwKYrm6gM2fOVHL6B+KkAIyMjHDixAm3YwghxE0SExOVLQDK7C6MDHZzuqpu9PvWxjpe3byZ
      V199lRPVFwEID/XyL//8c0YMy62YQggRN5QZAVjGCO0dPQA4doT3t+/muT/6Ook+DwNDIwBc
      rD5NVlYKVRcaWbmwxMW0QggR+5QZAXyWMdBBRtE8fMYA27Zv53LLVQBq6lt45NGHqT172uWE
      QggR+5QsAF5/gPDQIIHkTO5fu4K6hiYig13UNlxh27ZdNDZcYCBkuh1TCCFimjJTQA5wta2Z
      6upE8gpn4R24zOETZ8hIsDAtmwtnz7Bh0/MsnVvE+eP7qb54hdWLytyOLYQQMUuZAhBMzmLJ
      wlJM08Qybb78tT/m/Llqhg0Pjz6whpH+XjJyctE0jTl3rKCnb8TtyEIIEdOUKQBeXwKL7rjj
      htsW3rF09OuUxLzRr33+ILk5wRseq9o5xkIIAWp/NkkriCkmrSDGR9VcIK0gJkpaQYyftIIQ
      QggxpZSZApoM0zTp7e11O8aYDMNQcg8D1M2mai7VW0Houq7cXjbcXtszJSUFv99/y37fVIuL
      AjAwMCDXAxBCuG7dunXMnDnT7RhfmHIFIDwyQGXlaWwgO28WualetMRM0pMC2KZBY2s7xUWx
      8wcWQghVKXcMYGSgm65+m7lz55Kfm0X75RraegcBsM0wVdVnXU4ohBDxQbkRAEBScirZ2dng
      QIvbYYQQIk4pWQBOHt3P1ZbzVCxeTvDzHy6EEGIClCwAS1etZd3aJQCcP9bschohhIhPyh0D
      CARTKCzIGf0+I7eQU/s/ZPPmV+kN2TAywObNmzledd7FlEIIEfuUGwEEUzKpSPn0+xmzynlu
      Vvno948/9awLqYQQIv7ERSuIUChET0+P2zHGpOoiGMdxME1TuWyq5gK1F4KZpomu60peE1jV
      94BlRa8seCu3Z0ZGxi1p/TJdrSDiogBIL6DxU7Xnjqq5QHoBTZT0Aho/6QUkhBBiSil3DGAi
      ent72bVrl9sxhBC3qWeeeQavN/Y+TpVKPNDbTe/gMDNm5OPzQHdPD5ruIT0tHV3XCIeGGRgc
      BiA5JY2EQHTo5jgO4XDYzehCCBFzlCkAbfXn2HHoDLOL8qi52Mi9d5bzzrvvUzwzn4sNzTz7
      3AtcqTrClR6TrLQgpRWLKMhJczu2EELELGUKQH9PN2nZBaxeczdej05koJO84hIeWHcfi67U
      8Mmh48xM1rhj2QpK8tPdjiuEEDFPmYPAc5aspjDZ5sV/+wX7j56+4b70nHyckT6wLXZ+8A6b
      N2+mqUPN/v9CCBErlBkBWJbDnWvuZfnqu3l582ZWzSsYva/h/BmSswtB6+WhRzdRKiMAIYSY
      NGUKQFNDDfuOnCIx4CVvZjma7qGlrobN7S0EkjJ4/LG7qT19DJ9XvfOchRAiFim1EMy2bRzA
      M87FD52dnXJFMCGEa1544YVbehrodC0EU2YEAEz4H5uQkMCCBQtucZpbQ+VVyqpmUzWX4zg4
      jqNkuwXbttE0TbnVtnB7bE8VXxNfhFIjgIlS9QUG0gpivFTNBdIKYqKkFcT4SSsIIYQQU0qp
      KaCJGhoa4vTp05//QBeoPDqxbVvJoauquWQKaGJU3p7ApP5mc+fOJScn5/MfqKi4KACRSIT6
      +nq3YwghbjOFhYVSAG6FQx9/QFNvGDsyTFH5EsqyddrCaSwpL6DlQhUDgWzs7gZOXmgiMcHH
      4hX3UFaY7XZsIYSIWcoUgEgkwkOPbiTFE+Y3r7zHrLsrGAkb0ftCw4Q1AysUZs29D0krCCGE
      uAWUKQBmJMQH77xFZ8tlln7pEcC4+UGOTeXRQ1xOC7Jw6Z1kpyVPe04hhIgXyhQAjz+Bhx96
      nARzkDfe3crsuxYRCYUAiJgmoAEaxaWzKcxJITmo3mmCQggRS5QpALYZ4eC+PXjMEbyBNDJz
      i6jZ+TpBBjhZWcWzX1tBQ8clMrNzyMuTKSAhhJgsZRaCjQwPMjQcil4AJj0Nj64zPNhPe0cX
      mdm5pKUkEQmF0H1+vJ4bTymTVhBCCDesXbuW0tLSW/57b7tWEMHEZIKJN87pJyanUpqcOvq9
      //esqPV4PKSnqzkqcBxHyXOzQd1squYCdbOpmgvUzjZZfr/f7QiToswIYDJUXmwlrSDGR9Vc
      IK0gJkpaQYyftIIQQggxpZSZApqMSCRCa2ur2zHGZBiGknsYjuNgWdYtbWF7K6iaC661K3cc
      JfeyLctC0zQlWy6o+h6Y7PYsKChQcnQ/Huq9yyZgaGiITz75xO0YQojbyCOPPBLzBUCZ3YXI
      yACbX3mDiGUDUHX8ILWXo3v1l85XMRSxCQ/3s33ru7z51haarso1gYUQYjKUKQANNWcYCfVx
      rr4NgJamBnZ9uAvLgdbGOkZMm+3vvk3pwhU8/ugGUhPVO0gohBCxRJkCcK62kaee3Mi5UycB
      0P1BViyYyYHK89ceYRGyA5QX5xNISCQ1OeheWCGEiANKFAAz1Ed17SU+3LWX+tqzDBvRaaB5
      y9Zw+exhQoYFaFiWBTF/0qoQQqhBiQJQe/Y0D216jmeeeZrH7r2TmkvNAGi6j7UrF3OgshrQ
      yUr1cODEWdpam2jv6nM3tBBCxDglCkBy1kwWzy1G13XmLV1BVpKf+YuWEvBqFM9bwhOPbiDZ
      r/Pgo08SMPqpuXBJydMEhRAilijxKVpU8mkvjUBiKrMSUz9zr4dld666fi8rVq+Z1mxCCBGv
      4qIVhGEYGMYY1w9QQCQSUbZfiKoLdFTNZds2tm0rOfo0TRNd15VcCKbqe8CyLGcGBbAAACAA
      SURBVIAJLwQLBAJTtijwtmsGNxm6rpOYmOh2jDHpuq7kYpHrKyBV67mjai6QXkAT5fF4pBeQ
      ouKiANi2rewIIBwOux1hTI7jYBgGqg0AVc0F0QJwvVWFagzDwOPxKDkCCIfD2LatXAGY6Pb0
      eDxxUzTiogD09fXJ9QCEENNi4cKFLF++3O0Yt4QyBcC2TC5eOM9AyKKiogLdCnG5KdoKIje/
      kKz0FOpqztHePcCCxYvJSElyObEQQsQ2ZcaLJw/u5nLHMMkJHi41NNJ2qZqm7gF8Ph+6rnHm
      yB6qGjoozMvktc2vMBJRbxguhBCxRJkCoOkwPDxE3sxSliysAKCgqITy8nIy01K4WN/Gow/d
      S0lZBSvnzqK+tcPlxEIIEduUmQJactc6ks5V8f6W1ygoX0ZRAuzduZWzKYmsuPt+dN2DR48e
      REpMSGDENF1OLIQQsU2ZEUB/by+lcxfxlWefoeXKFQDuXf8Yzz33HLOLcknwwZW2Lhzboqq2
      gfysDJcTCyFEbFNmBNBztYltO3fh0WDF6rUkOf34R1s+a9z30Hre37qdI47DzDlLyE2Xg8BC
      CDEZyhSA0nlLKJ235DO3FNxwfzAlg2efe356QwkhRByLi1YQw8PDck3gcVL12ruq5gK5JvBE
      GYaB1+tVbiHYRLdneno6WVlZU5QqarpaQcRFAbAsS8k3JUAoFFK2FUQkElGu5YKquUBaQUxU
      OByWVhDjNF0FQL3dBSGEENNCvXH2BPT393PgwAG3Y4zJtm0lh+WO4+A4jnLZVM0FjPYnUm1P
      FtTOdr0PkGrZxvs3W7lyJbm5uVMZadopUwAc22ZkZATN4yEhEBjdKEYkjGlBMBi41ijMxO+/
      cchmWRbd3d1uxBZC3CZUbTg5GcrsZg31t/Ob37zOhzu28euXXyNiRavzgY+38evX3gbACg/z
      8b59bsYUQoi4oUwBwLEpKV/IExuf5K4FBRyoPIdjm7T1hMlPhq6hCOBgmvFXhYUQwg3qFIBr
      NE2jdM4curp76WmtJzl3FovnlXHmbK3b0YQQIq4ocwzgs2rP1ZCbk8eJE6foG9Y42m3TN+Jw
      zx3FbkcTQoi4oVAB0Kg+eZiutgtogVSeefJu3qw9wwvPfRnNcXj/zTcYDJs0XjzP5t5e5ixc
      wp2L5rkdWgghYlZcLATr7OyUK4IJIabUAw88QGFh4bQ8l1wUfhz8fj8lJSVuxxiTyquUVV2j
      oGouldcoqHquPaj7Hhjv9gwGg1OcaPrFxQhA1RcYSCuI8VI1F0griImSVhDjJ60ghBBCTKm4
      mAIaGRnhwoULbscYk8qjE1WzqZpLpoAmJla2p67rLF261OVU0ysuCkAoFOLs2bNuxxBCxDCP
      xyMFwA1meIi339pCxNFITs/nsUfWcf7EQVqHfDz0pRXU11ShB9I4c6aSzq4e0tLTKS5fyPKF
      5W5HF0KImKXEWPbI/o8oX3Efzz//Aun6AOcb2ujtHaS2qpLOgRBD/b1EPIk8/sQmZmTl8Mjj
      T7BswRy3YwshRExTogB0DduUz8pH0zTmLaigtfkqoPHQg/ey66Pdo4/7dH5TzblOIYSIJUoU
      AN02GTFMAIYGBvAHo6cApuUUkeb0c+Vqv5vxhBAiLilRAJYtnMu7W96jpuY8uz45yaKKaM8f
      B7j3/vupPHwQuLbHH/OrFoQQQg3KLAS72tpIc1sns0rnkJWeQn9fL8GkVHxenbbWZtIycwkG
      fPR0dZOWkYGufzoFJK0ghBCT5fF4+NrXvuZ2DOA2bAWRm19Ebn7R6PepaemjX+flf9p/IyMr
      86af1TQNv98/tQGFEHFNxbUKU02ZEcBkqLrQBKQVxHipmgukFcRESSuI8ZNWEEIIIaaUMlNA
      k2EYBh0dHW7HGJNhGEruYYC62VTNZds2juMouZdtmia6rivZpkL17ZmYmEhGRobbcVwRFwVg
      cHCQnTt3uh1DCBGDCgoKePDBB92O4QrXdhcsM8SevQcwTBuAvo5WjlSexnEsjhzYx4cffsiH
      u3bRO2Rw8uhBOnsHAXCsEHv37mckYrkVXQgh4oJrBcA2h9m760MuNF4F4OjhA5w5HS0AV5p7
      uOuuu7hr9WpSgl6qzxzj0OFKAC7XnGH/sZMMjphuRRdCiLjg6oThggV3UFN1BseO0DnokJua
      BMDI0CBNTU00NbXgAEnZBYT72jEsm6rzDSxbWOpmbCGEiAuuFoBAShZ6uIv62nMUlC9Au77M
      V4seoLFtC8uO3lCan05t/RUiehJJfvUOwgkhRKxx/ZSBBXOKeXPrQe6YP3v0tsTEFMrKyigr
      K8V3LeGCJUv46P03mVUx36WkQggRX1w7C0j3BCkvL6asOJu7Qz7Sgn7mzJuHpnnIyQiwfft2
      0HTuf+gR5s2dT0JqLqtXrWJheTHtQZPEgIwChBBiMuJiJbD0AhJCTJSKp4FO10rguCgA4XCY
      gYEBt2OMKRKJKNunSNUFOqrmkoVgE6P69gwGg6Smprod5wZSAMZBegGNn6o9d1TNBdILaKKk
      F9D4SS8gIYQQUyouWkH09PREDxoLIcQ4bdy4UbkpoOniegFwHJuOjk6ys3PQdQ3LjNDdO0BO
      VgaDQyGSkxOJhEYwHJ3QYB8RM9oCIjM7h4Dv0/i2bbv1TxBCxLA4mAWfMNengGwjzIs/+TvO
      1rcBcOHUEf7h5y+DY7Bjx15sy+D1za8wMBJh+wdv09jYSGNjI2HDcDm5EELENtdHAAAVd9zB
      hapTLJ6dR019C/PLr10ZzHE4tHsHJUvWkJeZQmJaJsuXLwduz6v3CCHEreT6CADAm5COz+yn
      v68by5dG0Bs9W6C16SIHT9WxoCLa+6e3rZmtW9/n/Q92MDgsIwAhhJgMJQoAwILyWbzzzvvM
      X7Js9LaCWeV84yuP8PZb72HZDhn5M9m06Ume3PgYKUlqnlsvhBCxwvUCoGk6GRnpFFcsImxA
      xawcMjPSAZ2MjDRyiypYPncGZ2ou44wMsHnzZja/+jqdfUNuRxdCiJgWFwvBpBWEEGKiNm3a
      RFpamtsxbjBdC8GUOAg8WcFgkCVLlrgdY0wqr1JWNZuquRzHwXEcJdst2LaNpmnKrbYF9ben
      iiv1p0tcjABUfYGBtIIYL1VzgbSCmChpBTF+0gpCCCHElIqLKaDBwUEqKyvdjjEm27aVnDIA
      dbOpmkumgCbG7e2ZlJTEqlWrXHt+lSlRAD5vFkrTtNHH/O7XEB3+NjU1TW1IIURMUu0Ar0qU
      KAD7dm6lY9DAGBmgfOkals/L5yc//hUzCrKx9ACbnniM6kP7KL5zDVlJCRw9tIfZi+4mK0XW
      AgghxEQpMZYNmzoPP/Y4X33+eWrPVgIOBbPm8syXn2XZ7Gz2HTlNJDSCZUf3/EOhELYd88eu
      hRDCVUqMALDCHDl8kOHeDjJyS0Zv1jSNsrkLOLWrkhT1DtQLIURMU2IEgO4lPzeTy83trFl1
      4/n8nW2tBBOCeHSHoVC0/48RDqPgsS4hhIgpaowA8FBUOpcXMlJ49eVf89Xnnqa+9izvvjNA
      V+8gT335y5i9zbz1zhbmzimioW2I+5Jl/l8IISZDiYVgRsTA6/OiaRqRcAiP10coFAI0EhIS
      8HiiA5XhwX76h0JkZWbi+8zFYKQVhBDi90lLS2PTpk033S4LwRQZAfj8n24AfyC6ajYpKemm
      xyUmp5KYfPOl24LBIEuXLp26gJNgmiZerxJ/5hs4joNlWcplUzUXfHrVORXXAViWha7rSq4D
      cPs9oOKqclUoMQKYLGkFMX6qtlxQNRdIK4iJklYQ4yetIIQQQkwp9cbZEzA4OMjx48fdjjEm
      t5fB/yGqZlM1F0RHKKrtyYK6ucD97bl06VIyMzNde36VqVEAHIex5qGuv6BvnqXSbjgN1DAM
      mpubpyyeECJ2zZs3z+0IylKkAIT4+b+8RG5+LgMjER59cA37j1/iyUfvw4oM8c62fcwvTOJo
      bRs+O0zhnDtYu+oO1NzfEUKI2KDIONshO7+UJ596ihVzZtA4oDHYeZmI5dBSf4H0nALMSJi7
      H3iY555/gba6U1ztHXY7tBBCxDRFCgD0drZz6mQlh0/XkpuRRkleFlfauqmqrmPRwvLRx2m6
      h4Wls+ju73cxrRBCxD5lCoDH5yUtPYunv/oCBZkpLFi8kOrTp+kL2WSlfOY0Ssehub2DlMSb
      1wkIIYT44tQ4BoBGSlo2JSXFo7ek586krfY1ylasR9c00OCTj3dwUrcJpORQkJXiYl4hhIh9
      aiwEcxwihonff+OCjOGhIXyBBHxeD5ZpEApH0D1eEgI3LiqRVhBCiN/nwQcfpKCg4KbbZSGY
      KiMATbvpwx8g8TPtIDxeH0nesTeU1+slNzd3yuJNhtvnQP8hqmZTNdfvXolOJSpnc3t7+v3S
      OPL3UWMEMEnSCmL8VG25oGoukFYQEyWtIMZPWkEIIYSYUmpMAU1SOBzmypUrbscYk9udEP8Q
      VbOpmstxHBzHUXJ6SrqB3iwjI4MZM2ZM+/PGEvXeZRMwPDzM0aNH3Y4hhFBIRUWFFIDP4XoB
      OLJ/N1d7B/EGErnnnnsIeiy2bd+O5vGTnpuHz4qwfNVdRPo62HWkmicevp/u5kv0OinMnpnj
      dnwhhIhZro9lW9v7eGjDBhaW5bHlnfewzQhaMIUNGzawetlSetpb6BoY4VJtNZcunmcwbHHu
      3Dl8cmRfCCEmxfUCgKbh8/spmj2foNfGtByG+vtpbW2lp7ef8tlF1F1q5nJrL19aPp+G5nba
      uwbIy775ymBCCCG+OPcLwDWO42CaNpoGQ4N9NDc309XTx8ziMpobLhC2dSrmV3DlwllMTyJ+
      Xb2DXUIIEUtcPwZgG2Hq6+pounSOpOyZeHWNGYXFrFmz5tojHIbaayiYdy9Jqdm0XjzF7JWP
      uJpZCCHigesF4M6VS2nv6mZWxVJKigrBNli+eOFnHqHx0CNPkpSZj6b7WP/YRtJnlLgVVwgh
      4obrBWBWWTmzyj5zg+4n73dO3ZpZMnv06+KyudOUTAgh4ltctIIwTdPtCL9XOBxWsq2B4zgY
      hqFcnxRVc0F0sZXjOEouUjNNE13XlVykFolEXNmen/f3kFYQCowAbgVN05TsgQJqr2q1bVu5
      bKrmgujrTNVs11coq/g+uN6rS8VVyrc79V7JE2BZFkNDQ27HGFMkEiESibgd4ybX97TD4bDb
      UW6gai6IdrVUtQDICOBGgUBAyZG3atR7JU9Af3+/XA9ACDFq+fLlLFy48PMfeJtTY3fBMTl9
      opJjx45R19CI7Tg0NDTgACODvdTVNwLQ19VB/3CIlqZmYv7AhRBCuEyRAhDhzNl68mbkcv7o
      PqoutXLkk08ImzY1J4/z1rYPcRyoPPIJgyGLI0eOSQEQQohJUqMAAI4DDg6mA4kJAQpy0mjr
      6qeps4+Fhel0DkW42hdiRkYSGnIwSQghJkuZAjA82MeVK40MhQxwHGaXl3LxQi1hx8ui8mIu
      nDuDnpCBRz77hRDillCmAOTkF3HP3fewctlcLl9pJbdgFnVVB0mdUcyMktmc3PsRhcWlbscU
      Qoi4ochZQF6I9PDqa6+RmJrBuvvvxBPwMresjHnz5uBLCFIxt4J5FcUAzCoukkkgIYSYpLhY
      CdzZ2SmngQohRn2R00BlJXCcFICRkRE6OjrcjjEmwzCUfIGBuquUVc1l2zaO4yi72lauCfyp
      9PR0UlP/8DVDpADESQG4vtRcRaFQiISEBLdj3MRxHCKRiHKrJVXNBdHXmW3bSn5gGIahbCuI
      cDiM3+9XrjhJAVDoILAQQojppd44ewL6+vrYs2eP2zHG5DiOcns+16maTeVcgGQbp+nengkJ
      CTz66KPT9nyxTL0C4Dh0dXWRkZWNER5hJPRpU7Ck5BRM0yD4O1Mqtm0zODg43UmFEAqyLMvt
      CDFDuSmgkf4OfvrjH1Lb3E13ezMnThzlpd+8yokTJ+jv72f3/v1uRxRCiLig3AjgQnUVGzY9
      w+nK43xl03ryi2bS22uzbt06zNAgtlR3IYS4JRQbAThcuNRESdlswj3NhE3b7UBCCBG3lCoA
      kcFO2nuHOfzJPiwjxKWWTrcjCSFE3FJqCqi+tpb7H32aRWUz6O9s4mDVJebPXEYweO2gr6bT
      dvkimzf3MmfhEu5cNM/dwEIIEcPiYiGYtIIQQlwXDAZ59tlnP/dxshBMsRHARAUCASoqKtyO
      MSZVVylfv/i6atlUzQXR040BJa+7a9s2mqYpuQ5guttUqPiBrqq4GAGo+iEL0gpivFTNBdIK
      YqKkFcT4SSsIIYQQUyoupoCGh4eprq52O8aYVB2dqDrVomoukCmgiZrqKaDS0lJyc3On5HfH
      u7goAOFwmAsXLrgdQwjhgszMTCkAE+Tqrkx4oIuXfv0Sb215k1fffJuRiMmej/ZyffnX3r27
      AXjj1z/nbF0TEF0r8MMf/4TeYcOd0EIIESdcLQCOZZA7azZPP/UMhSlemtp76O3tHb2/p7cb
      AM3v4/zpUzhA9amTBFLSMAxZJSyEEJPh+hRQzelKepvrae8d4Vv3Z3Ksv4Mtb72FBrR29wHg
      SUhBN0YYCkW42NxDeWGGu6GFECIOuF4AKhYv46F7VnL4423UNrYRTMniiSc3oQPvvrtl9HGL
      5s7i+PFKAmm5ePUR9wILIUSccP10hubLlzh86CiXGq+SnBgETUfX9WtnDUQfo6FRPHcRR/fs
      YMHixaDgmQ5CCBFrXF0IZlsmbe3tOA4kp6aTlpJEf/8AKakpaMBAfz8pqakMDPSTkpJKT3cX
      aRmZjAwNEggm4fVE65e0ghDi9nXXXXdRXl4+7p+ThWAuTwHpHi8FBYU33JaamjL6dUpqavT/
      KdH/Z2RmAdErg93we3Sd5OTkqYw6Yape3hDUzaZyLlD3sougbrapzKXiB3iskFYQU0xaQYyP
      qrlAWkFMlLSCGD9pBSGEEGJKuX4W0K0QiUTo6OhwO8aYDMNQcg8DontAXq96LwFVc9m2jeM4
      Su5lT3fHzfGYyu3p8/nIz8+fkt99O1DvXTYBQ0ND7Nmzx+0YQohplp6ezsaNG92OEbOUmgK6
      cK4Gw/50hW9kuIe339uGYUUPU1ypO8+Wt95kx0d7GAmbbsUUQoi4oFQBuFhbi2V/ekz6/Knj
      XG1p4crVXnAi7Np9gIcfe4JFFaU4dswfuxZCCFcpVQBu4DjU1F/l6Y0PcPZMFeAlOaDz8Z59
      +JLSCQbVnFcXQohYoWwBGOm/SkNTCwePneLcmVNY6Dz7tW+wqLyY9998hSvtPW5HFEKImKbW
      QWDbprenl4DPy+XqKh7c9FUWlOSS5t9GfctVBjs7KCstYvbMHIZCYbfTCiFETFOqAMybP5vT
      J46jeRIpLZ5JUXEhAZ+HO1ffTeewhsce5tChg6RllzG3aIbbcYUQIqYpVQDK5i6kbO7Cm25P
      Ss8lKR0oyGHx9McSQoi4FBetICKRCKFQyO0YY4pEIvj9frdj3MRxHAzDUC6bqrkguhDMtm0l
      F6mZpjnaRVc1U/kemEwfMGkFodgIYKI8Hg+p1xrHqUZ6AY2PqrlAegFNlKq9gEScFADHcTBN
      NReGWZalZDbHcZTMpmouiG5LVTuVXs+m4oDesiwsy7qlv1PV0U6siYsC0NvbK9cDEOI2Mnfu
      XFatWuV2jJjnegnt7+7g+LFjNLd34gCh4QGaW6+O3t/X3UlXTz8AtmVw/vwFbAX3coQQIta4
      WgAGe9p45Y33SUlLZc/2t6lr7qS9/hz/8q+/wrCjw9nt77/F9v3HAOhorOXNN17nSseAm7GF
      ECIuuFoALp45xdoNj1FRXsHGxx/h7KlTaMCieUVU1TZjDPegJ6QT9EUPbJ05W8NXvvI0p0+e
      djO2EELEBVcLQDhskZoSBMAfSAI7AsDshUupPXOC86dPMn/JUgAcO0JdUweax0/rpXOYMg0k
      hBCT4moBmFGQQ9WZGhzgct05UjILoqF8SST7Ipys76BiVg4AbQ21pGbl0d/XR2ZqgCtt0gtI
      CCEmw9WzgIrnLePCB+/y6uY6NG+QTRsfp7/1Imn+BLIXzqWmNYRH95KbnUFHZx8PbVhPTmqQ
      spnZXGztoiw/0834QggR01xfCfzZp5/o+dWdnZ1yGqgQt5FbcRqorARWYB3ArVhUk5iYyMqV
      K29BmltP1evbgrrZVM11faGViguQbrdrAmdkZNzS33e7cn0EcCtYlqXkEniQVhDjpWoukFYQ
      E6VqKwgZAcRJATBNE/sz1xJWicrFSdVsquZSeQRg2zaapin3IQvqbs/rnxm38/ZUb5w9QSp2
      j4RP935Uc73uq5ZN1Vzwab8dFaenDMPA4/Eo+WEWiUTw+XzKFSfZngq0grgVVHthfZbK2UT8
      kNeZmIi4KABCCCHGLy6OAajaohfUzXZ9s6uWTdVcINkmStVsquaC6csWFwVACCHE+MkUkBBC
      3KY8f/M3f/M3boe4Vdob69m+cxf4ksjJSnc5jUNjfS0f795DR+8QRYX5yg01a85UMmh6SE9N
      cjvKqMZLNezc9TEDhsbMvBy344wyIyPs+egjTp89T2ZuPklBNdYptDVdoulqL9mZGeBY7N21
      k9PnLjKruBSf1739O8dxuFRTxaDhIS0lkaH+HvZ8/BHVNXXkFRaR4HfrzBuHliuXaOocJCcz
      bTTrkf17SM7OczFXVPPlWtq6h8jKSMNxHE4dO8C+g0cJJmeSkTaxax//IXEzArDMEFu3f8TD
      jz1G5f6d9I0YruaxLZMLF66w4ZHHMTsvcqFFreZ1Pe1X2L3nAFeaWt2OMmqop42PPznFxief
      ZvbMGW7HucHxTz4mOb+CdWtXsO2Dnagwb1p35gR7Dx6l6uxFAM4c2o2TOpOVC2fx3o6PXc1W
      uX83h45WUn8l+vo6d6aKhcvXsGpRKR/u2e9arovVxzlw4BBna+pHb7tw4gCHjp6mbyjkWi6A
      mhNH2X/4OOfOXwKgvuoITf1ennpyI+nXuibfanFTACLDvWTml5OcmMiShWU0uXzRGN3j48GH
      H8KJDFB3dZCc9ERX83yWY5vs2LmXhzc8oNQLoLmhFk9CgK3vvUtHz5ASH7LXFcyaRc3Z4xw6
      dJScvAK34wBQtmgpmx5dh+faX6qhuY8VS+eSVzIfO9znarbla+/nvruWoV3LtuKeL5Gfncqp
      M1XkFxS6lmv2/Dt5fP196NdG46HBHo6ca+HeFQtdy3RdxdIVPPbQ2tH3ZPW5Ojz2AFs/2IEx
      RetcVXr/T44DXNuoOqAp8OlxpfYML7+xlU3PfJWsZHXaQZw+vBszKZvOq+20tjYzEnJ3tPRZ
      M2aW8tijGzi6bztDEXVWd3e1t5NXUERxcRH9PR2gwLkTvzulaGuf3ub2G/t3s4WGennpxRfJ
      Ll3CmqXzXUp1c65t771NYUkpre1XudxwxdWdjt/NZtkwf/FS1q1dydb3t01JNrdfJ7eMPzGN
      7qv1DI+McPr8FfJzbv182XjYVoQdew7xla98mbTEALbt/gfGdUXli1i9eA4ej4ZH9yhzbCJ7
      RgEdbS3oHh+Jfj+oEQuA7q5OZpWWMqu4hOHeHiVGJ6ZpEokYmJZFxDCYlZfMyepLXG2qw/G6
      +/o3DAPDNDFNE8M02btrB8vve4SFc2ZhmqZruUzTJGIYmFb0/6vW3s+sGenouobX6267CtM0
      MAwT61q2kpk5NLZ04QskTNlq5bg6DfRK3TmOnKimZN5i7lxU4ernh22G+OC9bVzft15z33pm
      ZKhzsBVgpK+L9n6DkqI8t6Nc43D6+CEuXm6nbN5Cli4odzvQqNBQHx/v3kvEcli6Yg3FBe4f
      oL5w9iQ1lxpxbIeU7Dzuu2spH+7YyWDEYf2GDaQE3WunUXl4P81Xu8HRyCuejWekiyttXQDM
      mrOA5YsqXMl14UwlNQ3NODikZRZw790r0DRobagjmF1Iuosj9XNnjnOxoQXHcUjPLeRLq+5g
      94cf0jcc5s4191I049Zf/ySuCoAQQogvLm6mgIQQQoyPFAAhhLhNSQEQQojblBQAIYS4TUkB
      EEKI25QUACGEuE1JARBiil2/mPxEOI6Nee3ShdPBtu3oNbYn8HyO42BZ1uilFt3jYNv2H8wR
      Hhmif3BkmnOpRwqAEFPJMfnev3+e//tHv5zQj+97/xWe/PILXOkcusXBblZbdZRvf+tbfOc7
      3+F//z//gd8tWUaol3/9xau/dxW0E+nnz/7sT/nBD77Pf/zP/5WWrv6Jh3EcXn7xl/QNRSby
      w/ztf/4u3/vL7/MXf/kDTp+/ctMjzn2yndfePzjxfHFCvashCxFH2i+eJLF4GfWnj2HYf8y7
      m19k1Yav4hto4MD5q+R5h3jv44MkJqbxx9/+nyjMThn9Wcex+XjPYR5dt5IDR04RKtS4POBn
      /d2L+enPXubR9cv56S9eJpCYzff/6rts/c0vSZ+RSQ/p2G1nqKq/ytwl9/D1Zx/mtZf+laq6
      ZjLyi/nen32DV3/1r5yqqeehTc+zYe1yHMvgRz/8Ed/+X/47yyuKGOgfxBzo4O9++BP6BkM8
      /uVv0nVxL5tffo/unna+9Wcv8NN//Ec6+03+7M+/x5yiXHBsIglZ/P3f/S27t/yaf/zZb/nr
      f7eef/zJL7D0JP7i+3/Jse2vcaa+lb7BMN/+7vdpOLGLnfsrSc6cxff//Bu8+Ns3yAkYdAwa
      bH1zC1WXLvPNbz7P0ZPVfP3Zp3jjtZdY//Cj/PqNHfhDHaxa9wRHP36PmvpmHv/Kv+O+ldGm
      br1dg/y3H/2M7rrj/F//z//gJz/67/zTD39IZ/8wX/8Pf46mA2hcOHOU37z2Dnj8fPPrX2H7
      npN850+eY8fbLzNn9WPMyXe7rfzUkhGAEFNoz5493H3/BhYVBag834zfCbP7k+Ps3r4NXXP4
      8Utv8D//5Q/QexvpHbhxLz800EnLsIenHl/PoX0fk52Tzdtvv0Nr/TlqKryxjwAABdxJREFU
      2zp56Z9/xvqnvkZJWphte49y8vBH7DpZz5rli1i8Yg0bn3iUD97dzNlje9lzrpO//sF3OXO6
      kqbak+yrbud7f/6n/OrFX2IDlhnB1LwsKM7hH/72/+C//u0/oQUSuXfdg9x/12Jeeu0N7n9w
      PYVF8/j2t/6ET959nWD+Ip5/dDX/9tvXRjPrgMfrY/UDD9Je38irv/w3lqx9jNUVGby59SOq
      T1Ry94aneWjlbF55axuzZs9n48ZNNFXvpfpyJ7ve/i1Xej1s2vQ0ZcUl/Ml/+DYlM1I5evIU
      ACdPHiMcGeblX/wcX0YJRudFzrSE+Ytvf5Nf/OuLnxm1aOi6TvnC1aR4Ovlw65tYGWX80TPr
      +fkvXxl9VGZ2AQ8/9gSZ2hD7Kq9w4fB2LjW38857+8jLdLef0nSQAiDEFHHsCHsPnuDjd37L
      uctX2bNvL2vXPcDRvR9z9ORFVi+ZjTcxk+yMNDye6FsxEomMzlufPXaAq10d/P0//ZLaqkr0
      jFkEh9rYuvNjvnT/A/T3DXDkwB6GvRnMzE0HEvjrH3yXoiw/f/fjn9PR1Yfu8RAaHqYgfyZJ
      wQCaphEaGqSrvYVtO/dx14o7cQDd64OIQVtviO/+1X+k90oLF84c4dV3dhA2LAzTIiGYiNfj
      ITk5mf6BQerOn+bYhdbf6euj4TgOtdVVpOZlMdA/yKnjB2ke0CgvzgN0cnKyKCiYSSg8ws9/
      9s/UXWnF4/dFn2PGHL73nW9SMCMbv9dHUnIyXo8n2kzRcbg+/1SyZA3ffG4TPgw6mi6z4+ND
      rFl5503boLvlIr1WEkZoiMs1Zzl88iKrlnza+vmDN37N4cpqNK8Hx3HY+Mh9/PSH/y/5i1eT
      FIj/CRIpAEJMke7WBpyMOfx/f/8/+Mcf/R3nDh8kMacMX38NVm45eTOKWF2Wzv/6n/4Lh6sb
      cByH//SXf057b/Tg5N79B/kv//X/b+9+XuOqogCOf+978+57Tea9SUT8UURbqVI0XTT+QCOW
      1KCW7rsRUQQXbbEu4qa0kVKatiq0JRHELtyIaOlGF1pQ3HRRWhUdgji0zZBGSvNr3iTz6/2e
      edfFpPUvSBvo+yzv4t57NvccuHDOCU6dPsOeke1cKZbZ+eog5368xNBzzzKye4Tp6TKLC/O0
      OylCN9A1DQSEDY+/p4p4QcymgRfxbvzG2JFxKistNm7ZxkMyYdGtslCvoQOaLnn3rT2MfXSA
      o8c+Rdl5QFCvuPxVnEIXgpy0Ef4NTnw2wfYdw1SXbrHsVmg2/W7AAupz0+zfv4/Jr39i73tv
      M/zGCLOzM1SWFomiNhBz9vPTHJ/4ijd3DtEOY2aul5ifr6JpGkYuhya6m23Z9AAnj49z/dYK
      brnE4bGPuTqzgBAaMpdDCMHmZwbJK4+KW2WpUb/zoAkRcHD0AKOHxnl/3we8PLQDz53DrbrU
      /P/vK1DMz81SKv+LEBqvvLaba1NT7Nr1+npqRrtmsmZwmcwaSTsd4nYHy5QopYjCENOyCPwW
      aAY9GyQ/nPsWs9DP+e/Oc3LySwommJaFJgRRGGJIE00TtJMYhQakeH5IwXEARaNeQwkdx7ZJ
      4ghpdqv8Zr1GojR6LImKG3x/4SIWIT//fo0vTh0jTWLqjSZ528Eyb3cNVQSehx/G5G0baegs
      uy5mr01O07AsSej7+GFCf38fgd8kiNoUHIfcagUdBD5KgWlad9ZazQbtFBzH5syhUYbf+ZCt
      TzxCb08PcejR8ELsfC+GlCRxjLkaQ6edsFJrUOjrIwpaJKlggykxTUkUJVhWdyxnHAU0mj62
      42BKA1CEQUAnVRhSIg0DlCIIurE5TgGNlI4S6CLFXa5RcBx0PUepeImz31xgcuITcuukTfpa
      yhJAJnPPKErFPyjfXGDrtkGe3vzYmpzSSUIuX75CrRXwwktDPLw6C/fuU/xT/JONTw3Qv44G
      JN2mVMrFX3/hyYHnefzRB+/1de6KLAFkMpnMfSr7A8hkMpn71H+LMP0MyMI0QQAAAABJRU5E
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
